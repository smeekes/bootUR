[{"path":[]},{"path":"https://smeekes.github.io/bootUR/articles/bootUR.html","id":"installation","dir":"Articles","previous_headings":"Installation and Loading","what":"Installation","title":"Introduction to bootUR","text":"package can installed CRAN using development version bootUR package can installed GitHub using installing GitHub, order build package source, need appropriate R development tools installed (Rtools Windows, tools Mac). want vignette appear package installing GitHub, use instead. building vignette may take bit time (bootstrap code run), package installation slower way.","code":"install.packages(\"bootUR\") # install.packages(\"devtools\") devtools::install_github(\"smeekes/bootUR\") # install.packages(\"devtools\") devtools::install_github(\"smeekes/bootUR\", build_vignettes = TRUE, dependencies = TRUE)"},{"path":"https://smeekes.github.io/bootUR/articles/bootUR.html","id":"load-package","dir":"Articles","previous_headings":"Installation and Loading","what":"Load Package","title":"Introduction to bootUR","text":"installation, package can loaded standard way:","code":"library(bootUR)"},{"path":"https://smeekes.github.io/bootUR/articles/bootUR.html","id":"preliminary-analysis-missing-values","dir":"Articles","previous_headings":"","what":"Preliminary Analysis: Missing Values","title":"Introduction to bootUR","text":"bootUR provides simple tools check data suitable bootstrapped.","code":""},{"path":"https://smeekes.github.io/bootUR/articles/bootUR.html","id":"inspect-data-for-missing-values","dir":"Articles","previous_headings":"Preliminary Analysis: Missing Values","what":"Inspect Data for Missing Values","title":"Introduction to bootUR","text":"bootstrap tests bootUR work missing data, although multivariate time series different start end dates (unbalanced panels) allowed. bootUR provides simple function check data contain missing values. illustrate MacroTS dataset macroeconomic time series comes package.","code":"data(\"MacroTS\") check_missing_insample_values(MacroTS) #>  GDP_BE  GDP_DE  GDP_FR  GDP_NL  GDP_UK CONS_BE CONS_DE CONS_FR CONS_NL CONS_UK  #>   FALSE   FALSE   FALSE   FALSE   FALSE   FALSE   FALSE   FALSE   FALSE   FALSE  #> HICP_BE HICP_DE HICP_FR HICP_NL HICP_UK   UR_BE   UR_DE   UR_FR   UR_NL   UR_UK  #>   FALSE   FALSE   FALSE   FALSE   FALSE   FALSE   FALSE   FALSE   FALSE   FALSE"},{"path":"https://smeekes.github.io/bootUR/articles/bootUR.html","id":"checking-start-and-end-points-of-time-series","dir":"Articles","previous_headings":"Preliminary Analysis: Missing Values","what":"Checking Start and End Points of Time Series","title":"Introduction to bootUR","text":"time series different starting end points (thus series contain NAs beginning /end sample, resampling-based moving block bootstrap (MBB) sieve bootstrap (SB) used. bootUR lets check start end points follows:","code":"sample_check <- find_nonmissing_subsample(MacroTS) # Provides the number of the first and last non-missing observation for each series: sample_check$range  #>       GDP_BE GDP_DE GDP_FR GDP_NL GDP_UK CONS_BE CONS_DE CONS_FR CONS_NL #> first      1      1      1      5      1       1       1       1       5 #> last     100    100    100    100    100     100     100     100     100 #>       CONS_UK HICP_BE HICP_DE HICP_FR HICP_NL HICP_UK UR_BE UR_DE UR_FR UR_NL #> first       1       9       9       9       9       9     1     1     1     1 #> last      100     100     100     100     100     100   100   100   100   100 #>       UR_UK #> first     1 #> last    100 # Gives TRUE if the time series all start and end at the same observation: sample_check$all_equal #> [1] FALSE"},{"path":"https://smeekes.github.io/bootUR/articles/bootUR.html","id":"visualizing-missing-data","dir":"Articles","previous_headings":"Preliminary Analysis: Missing Values","what":"Visualizing Missing Data","title":"Introduction to bootUR","text":"ggplot2 installed, can also plot missing data patterns series get quick overview. may need manipulate arguments get plot properly sized (therefore run automatically).","code":"plot_missing_values(MacroTS, show_names = TRUE, axis_text_size = 5, legend_size = 6)"},{"path":"https://smeekes.github.io/bootUR/articles/bootUR.html","id":"augmented-dickey-fuller-test","dir":"Articles","previous_headings":"","what":"Augmented Dickey-Fuller Test","title":"Introduction to bootUR","text":"standard test unit roots, bootUR also implementation standard, non-bootstrap, augmented Dickey-Fuller (ADF) test (though use recommended sample sizes small). purpose adf() function can used. function allows set many options. First, one can choose classical single-step procedure (two_step = FALSE), deterministic components directly included test regression, flexible modern two-step procedure (two_step = TRUE) deterministic components first removed applying unit root test detrended data. standard ADF test, two specifications generally yield nearly identical results. Lag selection Lag length selection done automatically ADF regression; default modified Akaike information criterion (MAIC) proposed Ng Perron (2001) correction Perron Qu (2008). options include regular Akaike information criterion (AIC), well Bayesian information criterion modified variant. addition, rescaling suggested Cavaliere et al. (2015) implemented improve power test heteroskedasticity; can turned setting criterion_scale = FALSE. overwrite data-driven lag length selection pre-specified lag length, simply set minimum min_lag maximum lag length max_lag selection algorithm equal desired lag length. Implementation illustrate ADF test Dutch GDP two-step specification, including linear trend specification.","code":"GDP_NL <- MacroTS[, 4] adf(GDP_NL, deterministics = \"trend\") #>  #>  Two-step ADF test (with trend) on a single time series #>  #> data: GDP_NL #> null hypothesis: Series has a unit root #> alternative hypothesis: Series is stationary #>  #>        estimate largest root statistic p-value #> GDP_NL                0.9471    -2.515  0.3202"},{"path":[]},{"path":"https://smeekes.github.io/bootUR/articles/bootUR.html","id":"augmented-dickey-fuller-test-1","dir":"Articles","previous_headings":"Univariate Bootstrap Unit Root Tests","what":"Augmented Dickey-Fuller Test","title":"Introduction to bootUR","text":"perform bootstrap version ADF unit root test single time series, use boot_adf() function. function allows set many options, including bootstrap method used (option bootstrap), deterministic components included (option deterministics) type detrending used (option detrend). detrend = \"OLS\" gives standard ADF test, detrend = \"QD\" provides powerful DF-GLS test Elliott, Rothenberg Stock (1996). use terminology Quasi-Differencing (QD) rather GLS conveys meaning less ambiguously terminology used Smeekes Taylor (2012) Smeekes (2013). cases, two-step detrending used. Implementation illustrate bootstrap ADF test Dutch GDP, sieve bootstrap (bootstrap = SB) specification used Palm, Smeekes Urbain (2008) Smeekes (2013). get well-known test proposed Paparoditis Politis (2003), set bootstrap = \"MBB\". set 399 bootstrap replications (B = 399) prevent code running long. add intercept trend (deterministics = \"trend\") OLS detrending. console gives live updates bootstrap progress. turn , set show_progress = FALSE. bootstrap loop can run parallel setting do_parallel = TRUE (default). random number generation required draw bootstrap samples, first set seed random number generator obtain replicable results.","code":"set.seed(155776) boot_adf(GDP_NL, B = 399, bootstrap = \"SB\", deterministics = \"trend\",                      detrend = \"OLS\", do_parallel = FALSE) #> Progress: |------------------|  #>           ******************** #>  #>  SB bootstrap OLS test (with intercept and trend) on a single time #>  series #>  #> data: GDP_NL #> null hypothesis: Series has a unit root #> alternative hypothesis: Series is stationary #>  #>        estimate largest root statistic p-value #> GDP_NL                0.9471    -2.515  0.1454"},{"path":"https://smeekes.github.io/bootUR/articles/bootUR.html","id":"union-of-rejections-test","dir":"Articles","previous_headings":"Univariate Bootstrap Unit Root Tests","what":"Union of Rejections Test","title":"Introduction to bootUR","text":"Use boot_union() test based union rejections 4 tests different number deterministic components different type detrending (Smeekes Taylor, 2012). advantage union test don’t specify (rather influential) specification tests. makes union test safe option quick automatic unit root testing careful manual specification setup viable. illustrate sieve wild bootstrap proposed Smeekes Taylor (2012).","code":"boot_union(GDP_NL, B = 399, bootstrap = \"SWB\", do_parallel = FALSE) #> Progress: |------------------|  #>           ******************** #>  #>  SWB bootstrap union test on a single time series #>  #> data: GDP_NL #> null hypothesis: Series has a unit root #> alternative hypothesis: Series is stationary #>  #>        estimate largest root statistic p-value #> GDP_NL                    NA   -0.7115   0.614"},{"path":"https://smeekes.github.io/bootUR/articles/bootUR.html","id":"panel-unit-root-test","dir":"Articles","previous_headings":"","what":"Panel Unit Root Test","title":"Introduction to bootUR","text":"function boot_panel performs test multivariate (panel) time series testing null hypothesis series unit root. rejection typically interpreted evidence ‘significant proportion’ series stationary, although large proportion - series stationary - given test. test based averaging individual test statistics, also called Group-Mean (GM) test Palm, Smeekes Urbain (2011). Palm, Smeekes Urbain (2011) introduced test moving block bootstrap (bootstrap = \"MBB\"). However, resampling-based method handle unbalancedness, therefore give error applied MacroTS: Therefore, switch one wild bootstrap methods. illustrate dependent wild bootstrap (DWB) Shao (2010) Rho Shao (2019). default union test used series (union = TRUE), set FALSE deterministic components detrending methods can specified univariate Dickey-Fuller test. Although sieve bootstrap method \"SB\" \"SWB\" can used (historically popular among practitioners), Smeekes Urbain (2014b) show suited capture general forms dependence across units. code give warning recommend using different bootstrap method.","code":"boot_panel(MacroTS, bootstrap = \"MBB\", B = 399, do_parallel = FALSE) #> Error in check_inputs(data = data, boot_sqt_test = boot_sqt_test, boot_ur_test = boot_ur_test, : Resampling-based bootstraps MBB and SB cannot handle unbalanced series. boot_panel(MacroTS, bootstrap = \"DWB\", B = 399, do_parallel = FALSE) #> Progress: |------------------|  #>           ******************** #>  #>  Panel DWB bootstrap group-mean union test #>  #> data: MacroTS #> null hypothesis: All series have a unit root #> alternative hypothesis: Some series are stationary #>  #>         estimate largest root statistic p-value #> MacroTS                    NA   -0.8621  0.1103"},{"path":[]},{"path":"https://smeekes.github.io/bootUR/articles/bootUR.html","id":"individual-adf-tests","dir":"Articles","previous_headings":"Tests for Multiple Time Series","what":"Individual ADF Tests","title":"Introduction to bootUR","text":"perform individual ADF tests multiple time series simultaneously, function boot_ur() can still used. bootstrap performed series simultaneously, resampling-based bootstrap methods \"MBB\" \"SB\" used directly case unbalanced panels. used anyway, function revert splitting bootstrap performing individually per time series. case warning given alert user. Note boot_ur (intentionally) provide correction multiple testing; course, perform test significance level 5%, probability making mistake tests becomes (much, N large) 5%. explicitly account multiple testing, use functions boot_sqt() boot_fdr().","code":"ADFtests_out <- boot_ur(MacroTS[, 1:5], bootstrap = \"MBB\", B = 399, union = FALSE,                          deterministics = \"trend\", detrend = \"OLS\", do_parallel = FALSE) #> Warning in check_inputs(data = data, boot_sqt_test = boot_sqt_test, #> boot_ur_test = boot_ur_test, : Missing values cause resampling bootstrap to be #> executed for each time series individually. #> Progress: |------------------|  #>           ******************** print(ADFtests_out) #>  #>  MBB bootstrap ADF test (with intercept and trend) on each individual #>  series (no multiple testing correction) #>  #> data: MacroTS[, 1:5] #> null hypothesis: Series has a unit root #> alternative hypothesis: Series is stationary #>  #> Tests performed on each series:  #>        estimate largest root statistic p-value #> GDP_BE                0.9304    -2.792  0.1955 #> GDP_DE                0.8911    -2.774  0.1003 #> GDP_FR                0.9655    -2.049  0.5113 #> GDP_NL                0.9471    -2.515  0.1930 #> GDP_UK                0.9600    -2.449  0.2882"},{"path":"https://smeekes.github.io/bootUR/articles/bootUR.html","id":"bootstrap-sequential-tests","dir":"Articles","previous_headings":"Tests for Multiple Time Series","what":"Bootstrap Sequential Tests","title":"Introduction to bootUR","text":"function boot_sqt() performs Bootstrap Sequential Quantile Test (BSQT) proposed Smeekes (2015). split series groups consecutively tested unit roots, starting group likely stationary (smallest ADF statistics). unit root hypothesis rejected first group, algorithm stops; rejection, second group tested, . options boot_panel. parameter SQT_level controls significance level individual tests performed sequence, default value 0.05. important new parameter set group sizes. can either set units, fractions total number series (.e. quantiles, hence name) via parameter steps. N time series, setting steps = 0:N means unit tested sequentially. split series four equally sized groups (regardless many series ), use steps = 0:4 / 4. convention accordance notation Smeekes (2015), first entry vector equal zero, second entry indicates end first group, . However, initial zero accidentally omitted, automatically added function. Similarly, final value equal 1 (case quantiles) N end last group, added function. Testing individual series consecutively easiest interpretation, meaningful N small. case method equivalent bootstrap StepM method Romano Wolf (2005), controls familywise error rate, probability making least one false rejection. can get conservative N large, typically end rejecting null hypothesis. method illustrated autoregressive wild bootstrap Smeekes Urbain (2014a) Friedrich, Smeekes Urbain (2020).","code":"N <- ncol(MacroTS) # Test each unit sequentially boot_sqt(MacroTS, steps = 0:N, bootstrap = \"AWB\", B = 399, do_parallel = FALSE) #> Progress: |------------------|  #>           ******************** #>  #>  AWB bootstrap sequential quantile union test #>  #> data: MacroTS #> null hypothesis: Series has a unit root #> alternative hypothesis: Series is stationary #>  #> Sequence of tests:  #>        H0: # I(0) H1: # I(0)  tstat p-value #> Step 1          0          1 -1.661 0.02256 #> Step 2          1          2 -1.413 0.12281 # Split in four equally sized groups (motivated by the 4 series per country) boot_sqt(MacroTS, steps = 0:4 / 4, bootstrap = \"AWB\", B = 399, do_parallel = FALSE) #> Progress: |------------------|  #>           ******************** #>  #>  AWB bootstrap sequential quantile union test #>  #> data: MacroTS #> null hypothesis: Series has a unit root #> alternative hypothesis: Series is stationary #>  #> Sequence of tests:  #>        H0: # I(0) H1: # I(0)  tstat p-value #> Step 1          0          5 -1.052 0.05013"},{"path":"https://smeekes.github.io/bootUR/articles/bootUR.html","id":"bootstrap-fdr-controlling-tests","dir":"Articles","previous_headings":"Tests for Multiple Time Series","what":"Bootstrap FDR Controlling Tests","title":"Introduction to bootUR","text":"function boot_fdr() controls multiple testing controlling false discovery rate (FDR), defined expected proportion false rejections relative total number rejections. scales total number tests, making suitable large N familywise error rate. bootstrap method controlling FDR introduced Romano, Shaikh Wolf (2008), showed , unlike classical way control FDR, bootstrap appropriate general forms dependence series. Moon Perron (2012) applied method unit root testing; essentially method implemented boot_fdr() though option change bootstrap used (suggestion MBB). arguments set multivariate unit root tests, exception FDR_level wihch controls FDR level. BSQT, method report tests rejection occurs. illustrate final available bootstrap method, block wild bootstrap Shao (2011) Smeekes Urbain (2014a).","code":"boot_fdr(MacroTS[, 1:10], FDR_level = 0.1, bootstrap = \"BWB\", B = 399, do_parallel = FALSE) #> Progress: |------------------|  #>           ******************** #>  #>  BWB bootstrap union test with false discovery rate control #>  #> data: MacroTS[, 1:10] #> null hypothesis: Series has a unit root #> alternative hypothesis: Series is stationary #>  #> Sequence of tests:  #>         tstat critical value #> GDP_DE -1.077         -1.581"},{"path":"https://smeekes.github.io/bootUR/articles/bootUR.html","id":"determining-order-of-integration","dir":"Articles","previous_headings":"","what":"Determining Order of Integration","title":"Introduction to bootUR","text":"Generally unit root tests used single step larger algorithm determine orders integration time series dataset. particular, many economic datasets contain variables order integration 2, need differenced twice eliminate trends. standard unit root test determine however. purpose, add function order_integration() performs sequence unit root tests determine orders time series.","code":""},{"path":"https://smeekes.github.io/bootUR/articles/bootUR.html","id":"how-does-it-work","dir":"Articles","previous_headings":"Determining Order of Integration","what":"How does it work","title":"Introduction to bootUR","text":"Starting maximum order (default equal 2), differences data time can one unit root. test rejected particular series, know series order . series reject integrated (differenced times original level), test repeated. classified series, obtain full specification orders time series.","code":""},{"path":"https://smeekes.github.io/bootUR/articles/bootUR.html","id":"implementation","dir":"Articles","previous_headings":"Determining Order of Integration","what":"Implementation","title":"Introduction to bootUR","text":"function allows us choose unit root test want use. take boot_fdr. don’t get orders , also appropriately differenced data. achieve differencing, order_integration() uses function diff_mult() also available stand-alone function package. Finally, function provided plot found orders (run):","code":"out_orders <- order_integration(MacroTS[, 11:15], method = \"boot_fdr\", B = 399,                                  do_parallel = FALSE) #> Progress: |------------------|  #>           ******************** #> Progress: |------------------|  #>           ******************** # Orders out_orders$order_int #> HICP_BE HICP_DE HICP_FR HICP_NL HICP_UK  #>       0       0       1       0       1 # Differenced data stationary_data <- out_orders$diff_data plot_order_integration(out_orders)"},{"path":"https://smeekes.github.io/bootUR/articles/bootUR.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Introduction to bootUR","text":"Cavaliere, G., Phillips, P.C.B., Smeekes, S., Taylor, .M.R. (2015). Lag length selection unit root tests presence nonstationary volatility. Econometric Reviews, 34(4), 512-536. Elliott, G., Rothenberg, T.J., Stock, J.H. (1996). Efficient tests autoregressive unit root. Econometrica, 64(4), 813-836. Friedrich, M., Smeekes, S. Urbain, J.-P. (2020). Autoregressive wild bootstrap inference nonparametric trends. Journal Econometrics, 214(1), 81-109. Moon, H.R. Perron, B. (2012). Beyond panel unit root tests: Using multiple testing determine non stationarity properties individual series panel. Journal Econometrics, 169(1), 29-33. Ng, S. Perron, P. (2001). Lag Length Selection Construction Unit Root Tests Good Size Power. Econometrica, 69(6), 1519-1554, Palm, F.C., Smeekes, S. Urbain, J.-P. (2008). Bootstrap unit root tests: Comparison extensions. Journal Time Series Analysis, 29(1), 371-401. Palm, F. C., Smeekes, S., Urbain, J.-.P. (2011). Cross-sectional dependence robust block bootstrap panel unit root tests. Journal Econometrics, 163(1), 85-104. Paparoditis, E. Politis, D.N. (2003). Residual‐based block bootstrap unit root testing. Econometrica, 71(3), 813-855. Perron, P. Qu, Z. (2008). simple modification improve finite sample properties Ng Perron’s unit root tests. Economic Letters, 94(1), 12-19. Rho, Y. Shao, X. (2019). Bootstrap-assisted unit root testing piecewise locally stationary errors. Econometric Theory, 35(1), 142-166. Romano, J.P., Shaikh, .M., Wolf, M. (2008). Control false discovery rate dependence using bootstrap subsampling. Test, 17(3), 417. Romano, J. P. Wolf, M. (2005). Stepwise multiple testing formalized data snooping. Econometrica, 73(4), 1237-1282. Shao, X. (2010). dependent wild bootstrap. Journal American Statistical Association, 105(489), 218-235. Shao, X. (2011). bootstrap-assisted spectral test white noise unknown dependence. Journal Econometrics, 162, 213-224. Smeekes (2013). Detrending bootstrap unit root tests. Econometric Reviews, 32(8), 869-891. Smeekes, S. (2015). Bootstrap sequential tests determine order integration individual units time series panel. Journal Time Series Analysis, 36(3), 398-415. Smeekes, S. Taylor, .M.R. (2012). Bootstrap union tests unit roots presence nonstationary volatility. Econometric Theory, 28(2), 422-456. Smeekes, S. Urbain, J.-P. (2014a). multivariate invariance principle modified wild bootstrap methods application unit root testing. GSBE Research Memorandum . RM/14/008, Maastricht University. Smeekes, S. Urbain, J.-P. (2014b). applicability sieve bootstrap time series panels. Oxford Bulletin Economics Statistics, 76(1), 139-151.","code":""},{"path":"https://smeekes.github.io/bootUR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stephan Smeekes. Maintainer, author. Ines Wilms. Author.","code":""},{"path":"https://smeekes.github.io/bootUR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Smeekes S, Wilms (2023). “bootUR: R Package Bootstrap Unit Root Tests.” Journal Statistical Software, 106(12), 1–39. doi:10.18637/jss.v106.i12.","code":"@Article{,   title = {{bootUR}: An {R} Package for Bootstrap Unit Root Tests},   author = {Stephan Smeekes and Ines Wilms},   journal = {Journal of Statistical Software},   year = {2023},   volume = {106},   number = {12},   pages = {1--39},   doi = {10.18637/jss.v106.i12}, }"},{"path":"https://smeekes.github.io/bootUR/index.html","id":"bootur-bootstrap-unit-root-tests","dir":"","previous_headings":"","what":"Bootstrap Unit Root Tests","title":"Bootstrap Unit Root Tests","text":"R package bootUR implements several bootstrap tests unit roots, single time series (potentially) large systems time series.","code":""},{"path":"https://smeekes.github.io/bootUR/index.html","id":"installation-and-loading","dir":"","previous_headings":"","what":"Installation and Loading","title":"Bootstrap Unit Root Tests","text":"package can installed CRAN using development version bootUR package can installed GitHub using installing GitHub, order build package source, need appropriate R development tools installed (Rtools Windows, tools Mac). want vignette appear package installing GitHub, use instead. building vignette may take bit time (bootstrap code run), package installation slower way. installation, package can loaded standard way:","code":"install.packages(\"bootUR\") # install.packages(\"devtools\") devtools::install_github(\"smeekes/bootUR\") # install.packages(\"devtools\") devtools::install_github(\"smeekes/bootUR\", build_vignettes = TRUE, dependencies = TRUE) library(bootUR)"},{"path":"https://smeekes.github.io/bootUR/index.html","id":"functionality","dir":"","previous_headings":"","what":"Functionality","title":"Bootstrap Unit Root Tests","text":"quick overview package functionality provided vignette vignette(\"bootUR\"). investigation functionalities provided Journal Statistical Software article bootUR: R Package Bootstrap Unit Root Tests.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/MacroTS.html","id":null,"dir":"Reference","previous_headings":"","what":"Macroeconomic Time Series — MacroTS","title":"Macroeconomic Time Series — MacroTS","text":"Macroeconomic data Eurostat GDP, consumption, inflation unemployment Belgium, Germany, France, Netherlands United Kingdom.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/MacroTS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Macroeconomic Time Series — MacroTS","text":"","code":"MacroTS"},{"path":"https://smeekes.github.io/bootUR/reference/MacroTS.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Macroeconomic Time Series — MacroTS","text":"time series object containing 20 macroeconomic seasonally adjusted time series, quarterly observed 1992-2019 Belgium (), Germany (DE), France (FR), Netherlands (NL) United Kingdom (UK). GDP_BE Gross domestic product market prices (index, 2015=100) Belgium. GDP_DE Gross domestic product market prices (index, 2015=100) Germany. GDP_FR Gross domestic product market prices (index, 2015=100) France. GDP_NL Gross domestic product market prices (index, 2015=100) Netherlands. GDP_UK Gross domestic product market prices (index, 2015=100) United Kingdom. CONS_BE Final consumption expenditure (index, 2015=100) Belgium. CONS_DE Final consumption expenditure (index, 2015=100) Germany. CONS_FR Final consumption expenditure (index, 2015=100) France. CONS_NL Final consumption expenditure (index, 2015=100) Netherlands. CONS_UK Final consumption expenditure (index, 2015=100) United Kingdom. HICP_BE Harmonised Indices Consumer Prices (annual rate change, 2015=100) Belgium. HICP_DE Harmonised Indices Consumer Prices (annual rate change, 2015=100) Germany. HICP_FR Harmonised Indices Consumer Prices (annual rate change, 2015=100) France. HICP_N Harmonised Indices Consumer Prices (annual rate change, 2015=100) Netherlands. HICP_UK Harmonised Indices Consumer Prices (annual rate change, 2015=100) United Kingdom. UR_BE Unemployment rate (percentage active population) Belgium. UR_DE Unemployment rate (percentage active population) Germany. UR_FR Unemployment rate (percentage active population) France. UR_NL Unemployment rate (percentage active population) Netherlands. UR_UK Unemployment rate (percentage active population) United Kingdom.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/MacroTS.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Macroeconomic Time Series — MacroTS","text":"https://ec.europa.eu/eurostat/data/database","code":""},{"path":"https://smeekes.github.io/bootUR/reference/MacroTS.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Macroeconomic Time Series — MacroTS","text":"Unemployment rates seasonally calendar adjusted, series seasonally calendar adjusted. Quarterly inflation rates sampled Eurostat's monthly series annual rates change final month respective quarter. unemployment rate France excludes overseas territories ('France continental' Eurostat database).","code":""},{"path":"https://smeekes.github.io/bootUR/reference/adf.html","id":null,"dir":"Reference","previous_headings":"","what":"Augmented Dickey-Fuller Unit Root Test — adf","title":"Augmented Dickey-Fuller Unit Root Test — adf","text":"function performs standard augmented Dickey-Fuller unit root test single time series.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/adf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Augmented Dickey-Fuller Unit Root Test — adf","text":"","code":"adf(data, data_name = NULL, deterministics = \"intercept\", min_lag = 0,   max_lag = NULL, criterion = \"MAIC\", criterion_scale = TRUE,   two_step = TRUE)"},{"path":"https://smeekes.github.io/bootUR/reference/adf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Augmented Dickey-Fuller Unit Root Test — adf","text":"data \\(T\\)-dimensional vector tested unit roots. Data may also time series format (e.g. ts, zoo xts), data frame. data_name Optional name data, used output. default uses name 'data' argument. deterministics String indicating deterministic specification. relevant union = FALSE. Options \"none\": deterministics; \"intercept\": intercept ; \"trend\": intercept trend. union = FALSE, default adding intercept (warning given). min_lag Minimum lag length augmented Dickey-Fuller regression. Default 0. max_lag Maximum lag length augmented Dickey-Fuller regression. Default uses sample size-based rule \\(12(T/100)^{1/4}\\). criterion String information criterion used select lag length augmented Dickey-Fuller regression. Options : \"AIC\", \"BIC\", \"MAIC\", \"MBIC\". Default \"MAIC\" (Ng Perron, 2001). criterion_scale Logical indicator whether use rescaled information criteria Cavaliere et al. (2015) (TRUE) (FALSE). Default TRUE. two_step Logical indicator whether use one-step (two_step = FALSE) two-step (two_step = TRUE) detrending. default two-step detrending.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/adf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Augmented Dickey-Fuller Unit Root Test — adf","text":"object class \"bootUR\", \"htest\" following components: method name hypothesis test method; data.name name variable method performed; null.value value (gamma) parameter lagged dependent variable ADF regression null hypothesis. null, series unit root. Testing null unit root boils testing significance gamma parameter; alternative character string specifying direction alternative hypothesis relative null value. alternative postulates series stationary; estimate estimated value (gamma) parameter lagged dependent variable ADF regression; statistic value test statistic ADF unit root test; p.value p-value ADF unit root test. specifications specifications used test.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/adf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Augmented Dickey-Fuller Unit Root Test — adf","text":"function encompasses standard augmented Dickey-Fuller test. reported p-values MacKinnon's unit root p-values taken package urca. Lag length selection done automatically ADF regression specified information criterion. one modified criteria Ng Perron (2001) used, correction Perron Qu (2008) applied. short time series (fewer 50 time points) maximum lag length adjusted downward avoid potential multicollinearity issues bootstrap. overwrite data-driven lag length selection pre-specified lag length, simply set minimum `min_lag` maximum lag length `max_lag` selection algorithm equal desired lag length.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/adf.html","id":"errors-and-warnings","dir":"Reference","previous_headings":"","what":"Errors and warnings","title":"Augmented Dickey-Fuller Unit Root Test — adf","text":"Error: Multiple time series allowed. Switch multivariate method boot_ur, change argument data univariate time series. function provides standard ADF test asymptotic p-value. support multiple time series","code":""},{"path":"https://smeekes.github.io/bootUR/reference/adf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Augmented Dickey-Fuller Unit Root Test — adf","text":"Smeekes, S. Wilms, . (2023). bootUR: R Package Bootstrap Unit Root Tests. Journal Statistical Software, 106(12), 1-39.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/adf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Augmented Dickey-Fuller Unit Root Test — adf","text":"","code":"# standard ADF test on GDP_BE GDP_BE_adf <- adf(MacroTS[, 1], deterministics = \"trend\")"},{"path":"https://smeekes.github.io/bootUR/reference/boot_adf.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap augmented Dickey-Fuller Unit Root Test — boot_adf","title":"Bootstrap augmented Dickey-Fuller Unit Root Test — boot_adf","text":"function performs standard augmented Dickey-Fuller bootstrap unit root test single time series.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/boot_adf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap augmented Dickey-Fuller Unit Root Test — boot_adf","text":"","code":"boot_adf(data, data_name = NULL, bootstrap = \"AWB\", B = 1999,   block_length = NULL, ar_AWB = NULL, deterministics = \"intercept\",   min_lag = 0, max_lag = NULL, criterion = \"MAIC\", detrend = \"OLS\",   criterion_scale = TRUE, show_progress = TRUE, do_parallel = TRUE,   cores = NULL)"},{"path":"https://smeekes.github.io/bootUR/reference/boot_adf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap augmented Dickey-Fuller Unit Root Test — boot_adf","text":"data \\(T\\)-dimensional vector tested unit roots. Data may also time series format (e.g. ts, zoo xts), data frame. data_name Optional name data, used output. default uses name 'data' argument. bootstrap String bootstrap method used. Options \"MBB\" Moving blocks bootstrap (Paparoditis Politis, 2003); \"BWB\" Block wild bootstrap (Shao, 2011); \"DWB\" Dependent wild bootstrap (Shao, 2010; Rho Shao, 2019); \"AWB\" Autoregressive wild bootstrap (Smeekes Urbain, 2014a; Friedrich, Smeekes Urbain, 2020), default; \"SB\" Sieve bootstrap (Chang Park, 2003; Palm, Smeekes Urbain, 2008; Smeekes, 2013); \"SWB\" Sieve wild bootstrap (Cavaliere Taylor, 2009; Smeekes Taylor, 2012). B Number bootstrap replications. Default 1999. block_length Desired 'block length' bootstrap. MBB, BWB DWB bootstrap, genuine block length. AWB bootstrap, block length transformed autoregressive parameter via formula \\(0.01^(1/block_length)\\) Smeekes Urbain (2014a); can overwritten setting ar_AWB directly. Default sets block length function time series length T, via rule \\(block_length = 1.75 T^(1/3)\\) Palm, Smeekes Urbain (2011). ar_AWB Autoregressive parameter used AWB bootstrap method (bootstrap = \"AWB\"). Can used set parameter directly rather via default link block length. deterministics String indicating deterministic specification. relevant union = FALSE. Options \"none\": deterministics; \"intercept\": intercept ; \"trend\": intercept trend. union = FALSE, default adding intercept (warning given). min_lag Minimum lag length augmented Dickey-Fuller regression. Default 0. max_lag Maximum lag length augmented Dickey-Fuller regression. Default uses sample size-based rule \\(12(T/100)^{1/4}\\). criterion String information criterion used select lag length augmented Dickey-Fuller regression. Options : \"AIC\", \"BIC\", \"MAIC\", \"MBIC\". Default \"MAIC\" (Ng Perron, 2001). detrend String indicating type detrending performed. relevant union = FALSE. Options : \"OLS\" \"QD\" (typically also called GLS, see Elliott, Rothenberg Stock, 1996). default \"OLS\". criterion_scale Logical indicator whether use rescaled information criteria Cavaliere et al. (2015) (TRUE) (FALSE). Default TRUE. show_progress Logical indicator whether bootstrap progress update printed console. Default FALSE. do_parallel Logical indicator whether bootstrap loop executed parallel. Default TRUE. cores number cores used parallel loops. Default use one.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/boot_adf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrap augmented Dickey-Fuller Unit Root Test — boot_adf","text":"object class \"bootUR\", \"htest\" following components: method name hypothesis test method; data.name name data method performed; null.value value (gamma) parameter lagged dependent variable ADF regression null hypothesis. null, series unit root. Testing null unit root boils testing significance gamma parameter; alternative character string specifying direction alternative hypothesis relative null value. alternative postulates series stationary; estimate estimated value (gamma) parameter lagged dependent variable ADF regression.; statistic value test statistic unit root test; p.value p-value unit root test; details list containing detailed outcomes performed test, selected lags, individual estimates p-values. specifications specifications used test.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/boot_adf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bootstrap augmented Dickey-Fuller Unit Root Test — boot_adf","text":"options encompass many test proposed literature. detrend = \"OLS\" gives standard augmented Dickey-Fuller test, detrend = \"QD\" provides DF-GLS test Elliott, Rothenberg Stock (1996). bootstrap algorithm always based residual bootstrap (alternative) obtain residuals rather difference-based bootstrap (null), see e.g. Palm, Smeekes Urbain (2008). Lag length selection done automatically ADF regression specified information criterion. one modified criteria Ng Perron (2001) used, correction Perron Qu (2008) applied. short time series (fewer 50 time points) maximum lag length adjusted downward avoid potential multicollinearity issues bootstrap. overwrite data-driven lag length selection pre-specified lag length, simply set minimum `min_lag` maximum lag length `max_lag` selection algorithm equal desired lag length.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/boot_adf.html","id":"errors-and-warnings","dir":"Reference","previous_headings":"","what":"Errors and warnings","title":"Bootstrap augmented Dickey-Fuller Unit Root Test — boot_adf","text":"Error: Multiple time series allowed. Switch multivariate method boot_ur, change argument data univariate time series. function simple wrapper around boot_ur facilitate use single time series. support multiple time series, boot_ur specifically suited .","code":""},{"path":"https://smeekes.github.io/bootUR/reference/boot_adf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bootstrap augmented Dickey-Fuller Unit Root Test — boot_adf","text":"Smeekes, S. Wilms, . (2023). bootUR: R Package Bootstrap Unit Root Tests. Journal Statistical Software, 106(12), 1-39. Chang, Y. Park, J. (2003). sieve bootstrap test unit root. Journal Time Series Analysis, 24(4), 379-400. Cavaliere, G. Taylor, .M.R (2009). Heteroskedastic time series unit root. Econometric Theory, 25, 1228–1276. Cavaliere, G., Phillips, P.C.B., Smeekes, S., Taylor, .M.R. (2015). Lag length selection unit root tests presence nonstationary volatility. Econometric Reviews, 34(4), 512-536. Elliott, G., Rothenberg, T.J., Stock, J.H. (1996). Efficient tests autoregressive unit root. Econometrica, 64(4), 813-836. Friedrich, M., Smeekes, S. Urbain, J.-P. (2020). Autoregressive wild bootstrap inference nonparametric trends. Journal Econometrics, 214(1), 81-109. Ng, S. Perron, P. (2001). Lag Length Selection Construction Unit Root Tests Good Size Power. Econometrica, 69(6), 1519-1554, Palm, F.C., Smeekes, S. Urbain, J.-P. (2008). Bootstrap unit root tests: Comparison extensions. Journal Time Series Analysis, 29(1), 371-401. Paparoditis, E. Politis, D.N. (2003). Residual-based block bootstrap unit root testing. Econometrica, 71(3), 813-855. Perron, P. Qu, Z. (2008). simple modification improve finite sample properties Ng Perron's unit root tests. Economic Letters, 94(1), 12-19. Rho, Y. Shao, X. (2019). Bootstrap-assisted unit root testing piecewise locally stationary errors. Econometric Theory, 35(1), 142-166. Smeekes, S. (2013). Detrending bootstrap unit root tests. Econometric Reviews, 32(8), 869-891. Shao, X. (2010). dependent wild bootstrap. Journal American Statistical Association, 105(489), 218-235. Shao, X. (2011). bootstrap-assisted spectral test white noise unknown dependence. Journal Econometrics, 162, 213-224. Smeekes, S. Taylor, .M.R. (2012). Bootstrap union tests unit roots presence nonstationary volatility. Econometric Theory, 28(2), 422-456. Smeekes, S. Urbain, J.-P. (2014a). multivariate invariance principle modified wild bootstrap methods application unit root testing. GSBE Research Memorandum . RM/14/008, Maastricht University","code":""},{"path":[]},{"path":"https://smeekes.github.io/bootUR/reference/boot_adf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrap augmented Dickey-Fuller Unit Root Test — boot_adf","text":"","code":"# boot_adf on GDP_BE GDP_BE_adf <- boot_adf(MacroTS[, 1], B = 199, deterministics = \"trend\", detrend = \"OLS\",                        do_parallel = FALSE, show_progress = FALSE) print(GDP_BE_adf) #>  #> \tAWB bootstrap OLS test (with intercept and trend) on a single time #> \tseries #>  #> data: MacroTS[, 1] #> null hypothesis: Series has a unit root #> alternative hypothesis: Series is stationary #>  #>              estimate largest root statistic p-value #> MacroTS[, 1]                0.9304    -2.792  0.1106 #>"},{"path":"https://smeekes.github.io/bootUR/reference/boot_fdr.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap Unit Root Tests with False Discovery Rate control — boot_fdr","title":"Bootstrap Unit Root Tests with False Discovery Rate control — boot_fdr","text":"Controls multiple testing controlling false discovery rate (FDR), see Moon Perron (2012) Romano, Shaikh Wolf (2008).","code":""},{"path":"https://smeekes.github.io/bootUR/reference/boot_fdr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap Unit Root Tests with False Discovery Rate control — boot_fdr","text":"","code":"boot_fdr(data, data_name = NULL, bootstrap = \"AWB\", B = 1999,   block_length = NULL, ar_AWB = NULL, FDR_level = 0.05, union = TRUE,   deterministics = NULL, detrend = NULL, min_lag = 0, max_lag = NULL,   criterion = \"MAIC\", criterion_scale = TRUE, show_progress = TRUE,   do_parallel = TRUE, cores = NULL)"},{"path":"https://smeekes.github.io/bootUR/reference/boot_fdr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap Unit Root Tests with False Discovery Rate control — boot_fdr","text":"data \\(T\\)-dimensional vector (\\(T\\) x \\(N\\))-matrix \\(N\\) time series \\(T\\) observations tested unit roots. Data may also time series format (e.g. ts, zoo xts), data frame, long column represents single time series. data_name Optional name data, used output. default uses name 'data' argument. bootstrap String bootstrap method used. Options \"MBB\" Moving block bootstrap (Paparoditis Politis, 2003; Palm, Smeekes Urbain, 2011); \"BWB\" Block wild bootstrap (Shao, 2011; Smeekes Urbain, 2014a); \"DWB\" Dependent wild bootstrap (Shao, 2010; Smeekes Urbain, 2014a; Rho Shao, 2019); \"AWB\" Autoregressive wild bootstrap (Smeekes Urbain, 2014a; Friedrich, Smeekes Urbain, 2020), default; \"SB\" Sieve bootstrap (Chang Park, 2003; Palm, Smeekes Urbain, 2008; Smeekes, 2013); \"SWB\" Sieve wild bootstrap (Cavaliere Taylor, 2009; Smeekes Taylor, 2012). B Number bootstrap replications. Default 1999. block_length Desired 'block length' bootstrap. MBB, BWB DWB bootstrap, genuine block length. AWB bootstrap, block length transformed autoregressive parameter via formula \\(0.01^(1/block_length)\\) Smeekes Urbain (2014a); can overwritten setting ar_AWB directly. Default sets block length function time series length T, via rule \\(block_length = 1.75 T^(1/3)\\) Palm, Smeekes Urbain (2011). ar_AWB Autoregressive parameter used AWB bootstrap method (bootstrap = \"AWB\"). Can used set parameter directly rather via default link block length. FDR_level Desired False Discovery Rate level unit root tests. Default 0.05. union Logical indicator whether use bootstrap union tests (TRUE) (FALSE), see Smeekes Taylor (2012). Default TRUE. deterministics String indicating deterministic specification. relevant union = FALSE. Options \"none\": deterministics; \"intercept\": intercept ; \"trend\": intercept trend. union = FALSE, default adding intercept (warning given). detrend String indicating type detrending performed. relevant union = FALSE. Options : \"OLS\" \"QD\" (typically also called GLS, see Elliott, Rothenberg Stock, 1996). default \"OLS\". min_lag Minimum lag length augmented Dickey-Fuller regression. Default 0. max_lag Maximum lag length augmented Dickey-Fuller regression. Default uses sample size-based rule \\(12(T/100)^{1/4}\\). criterion String information criterion used select lag length augmented Dickey-Fuller regression. Options : \"AIC\", \"BIC\", \"MAIC\", \"MBIC\". Default \"MAIC\" (Ng Perron, 2001). criterion_scale Logical indicator whether use rescaled information criteria Cavaliere et al. (2015) (TRUE) (FALSE). Default TRUE. show_progress Logical indicator whether bootstrap progress update printed console. Default FALSE. do_parallel Logical indicator whether bootstrap loop executed parallel. Default TRUE. cores number cores used parallel loops. Default use one.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/boot_fdr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrap Unit Root Tests with False Discovery Rate control — boot_fdr","text":"object class \"bootUR\", \"mult_htest\" following components: method name hypothesis test method; data.name name data method performed; null.value value (gamma) parameter lagged dependent variable ADF regression null hypothesis. null, series unit root. Testing null unit root boils testing significance gamma parameter; alternative character string specifying direction alternative hypothesis relative null value. alternative postulates series stationary; estimate estimated values (gamma) parameter lagged dependent variable ADF regressions. Note union test (union = TRUE), estimate defined, hence NA returned; statistic value test statistic unit root tests; p.value vector NA values, p-values available FDR method; rejections vector logical indicators time series whether null hypothesis unit root rejected (TRUE) (FALSE); details list containing detailed outcomes performed tests, selected lags, individual estimates p-values. addtion, slot FDR contains matrix step test statistics critical value, non-rejection. series.names names series tests performed ; specifications specifications used test(s).","code":""},{"path":"https://smeekes.github.io/bootUR/reference/boot_fdr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bootstrap Unit Root Tests with False Discovery Rate control — boot_fdr","text":"false discovery rate FDR defined expected proportion false rejections relative total number rejections. See boot_ur details bootstrap algorithm lag selection.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/boot_fdr.html","id":"errors-and-warnings","dir":"Reference","previous_headings":"","what":"Errors and warnings","title":"Bootstrap Unit Root Tests with False Discovery Rate control — boot_fdr","text":"Error: Resampling-based bootstraps MBB SB handle missing values. time series data different starting end points (thus series contain NA values beginning /end sample, resampling-based moving block bootstrap (MBB) sieve bootstrap (SB) used, create holes (internal missings) bootstrap samples. Switch another bootstrap method truncate sample eliminate NA values. Warning: SB SWB bootstrap recommended boot_ur; see help details. Although sieve bootstrap methods \"SB\" \"SWB\" can used, Smeekes Urbain (2014b) show suited capture general forms dependence across units, using joint multiple testing valid. warning thereofre serves recommend user consider different bootstrap method. Warning: Deterministic specification argument deterministics ignored, union test applied. union test calculates union four combinations deterministic components (intercept intercept trend) detrending methods (OLS QD). Setting deterministic components manually therefore effect. Warning: Detrending method argument detrend ignored, union test applied. union test calculates union four combinations deterministic components (intercept intercept trend) detrending methods (OLS QD). Setting detrending methods manually therefore effect.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/boot_fdr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bootstrap Unit Root Tests with False Discovery Rate control — boot_fdr","text":"Smeekes, S. Wilms, . (2023). bootUR: R Package Bootstrap Unit Root Tests. Journal Statistical Software, 106(12), 1-39. Chang, Y. Park, J. (2003). sieve bootstrap test unit root. Journal Time Series Analysis, 24(4), 379-400. Cavaliere, G. Taylor, .M.R (2009). Heteroskedastic time series unit root. Econometric Theory, 25, 1228–1276. Cavaliere, G., Phillips, P.C.B., Smeekes, S., Taylor, .M.R. (2015). Lag length selection unit root tests presence nonstationary volatility. Econometric Reviews, 34(4), 512-536. Elliott, G., Rothenberg, T.J., Stock, J.H. (1996). Efficient tests autoregressive unit root. Econometrica, 64(4), 813-836. Friedrich, M., Smeekes, S. Urbain, J.-P. (2020). Autoregressive wild bootstrap inference nonparametric trends. Journal Econometrics, 214(1), 81-109. Moon, H.R. Perron, B. (2012). Beyond panel unit root tests: Using multiple testing determine non stationarity properties individual series panel. Journal Econometrics, 169(1), 29-33. Ng, S. Perron, P. (2001). Lag Length Selection Construction Unit Root Tests Good Size Power. Econometrica, 69(6), 1519-1554, Palm, F.C., Smeekes, S. Urbain, J.-P. (2008). Bootstrap unit root tests: Comparison extensions. Journal Time Series Analysis, 29(1), 371-401. Palm, F. C., Smeekes, S., Urbain, J.-.P. (2011). Cross-sectional dependence robust block bootstrap panel unit root tests. Journal Econometrics, 163(1), 85-104. Paparoditis, E. Politis, D.N. (2003). Residual-based block bootstrap unit root testing. Econometrica, 71(3), 813-855. Perron, P. Qu, Z. (2008). simple modification improve finite sample properties Ng Perron's unit root tests. Economic Letters, 94(1), 12-19. Rho, Y. Shao, X. (2019). Bootstrap-assisted unit root testing piecewise locally stationary errors. Econometric Theory, 35(1), 142-166. Romano, J.P., Shaikh, .M., Wolf, M. (2008). Control false discovery rate dependence using bootstrap subsampling. Test, 17(3), 417. Shao, X. (2010). dependent wild bootstrap. Journal American Statistical Association, 105(489), 218-235. Shao, X. (2011). bootstrap-assisted spectral test white noise unknown dependence. Journal Econometrics, 162, 213-224. Smeekes, S. (2013). Detrending bootstrap unit root tests. Econometric Reviews, 32(8), 869-891. Smeekes, S. Taylor, .M.R. (2012). Bootstrap union tests unit roots presence nonstationary volatility. Econometric Theory, 28(2), 422-456. Smeekes, S. Urbain, J.-P. (2014a). multivariate invariance principle modified wild bootstrap methods application unit root testing. GSBE Research Memorandum . RM/14/008, Maastricht University Smeekes, S. Urbain, J.-P. (2014b). applicability sieve bootstrap time series panels. Oxford Bulletin Economics Statistics, 76(1), 139-151.","code":""},{"path":[]},{"path":"https://smeekes.github.io/bootUR/reference/boot_fdr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrap Unit Root Tests with False Discovery Rate control — boot_fdr","text":"","code":"# boot_fdr on GDP_BE and GDP_DE two_series_boot_fdr <- boot_fdr(MacroTS[, 1:2], bootstrap = \"MBB\", B = 199,                                 do_parallel = FALSE, show_progress = FALSE) print(two_series_boot_fdr) #>  #> \tMBB bootstrap union test with false discovery rate control #>  #> data: MacroTS[, 1:2] #> null hypothesis: Series has a unit root #> alternative hypothesis: Series is stationary #>  #> Sequence of tests:  #>         tstat critical value #> GDP_DE -1.109         -1.287 #>"},{"path":"https://smeekes.github.io/bootUR/reference/boot_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Panel Unit Root Test — boot_panel","title":"Panel Unit Root Test — boot_panel","text":"Performs test multivariate (panel) time series testing null hypothesis series unit root. test based averaging individual test statistics, also called Group-Mean (GM) test Palm, Smeekes Urbain (2011).","code":""},{"path":"https://smeekes.github.io/bootUR/reference/boot_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Panel Unit Root Test — boot_panel","text":"","code":"boot_panel(data, data_name = NULL, bootstrap = \"AWB\", B = 1999,   block_length = NULL, ar_AWB = NULL, union = TRUE,   union_quantile = 0.05, deterministics = NULL, detrend = NULL,   min_lag = 0, max_lag = NULL, criterion = \"MAIC\",   criterion_scale = TRUE, show_progress = TRUE, do_parallel = TRUE,   cores = NULL)"},{"path":"https://smeekes.github.io/bootUR/reference/boot_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Panel Unit Root Test — boot_panel","text":"data \\(T\\)-dimensional vector (\\(T\\) x \\(N\\))-matrix \\(N\\) time series \\(T\\) observations tested unit roots. Data may also time series format (e.g. ts, zoo xts), data frame, long column represents single time series. data_name Optional name data, used output. default uses name 'data' argument. bootstrap String bootstrap method used. Options \"MBB\" Moving block bootstrap (Paparoditis Politis, 2003; Palm, Smeekes Urbain, 2011); \"BWB\" Block wild bootstrap (Shao, 2011; Smeekes Urbain, 2014a); \"DWB\" Dependent wild bootstrap (Shao, 2010; Smeekes Urbain, 2014a; Rho Shao, 2019); \"AWB\" Autoregressive wild bootstrap (Smeekes Urbain, 2014a; Friedrich, Smeekes Urbain, 2020), default; \"SB\" Sieve bootstrap (Chang Park, 2003; Palm, Smeekes Urbain, 2008; Smeekes, 2013); \"SWB\" Sieve wild bootstrap (Cavaliere Taylor, 2009; Smeekes Taylor, 2012). B Number bootstrap replications. Default 1999. block_length Desired 'block length' bootstrap. MBB, BWB DWB bootstrap, genuine block length. AWB bootstrap, block length transformed autoregressive parameter via formula \\(0.01^(1/block_length)\\) Smeekes Urbain (2014a); can overwritten setting ar_AWB directly. Default sets block length function time series length T, via rule \\(block_length = 1.75 T^(1/3)\\) Palm, Smeekes Urbain (2011). ar_AWB Autoregressive parameter used AWB bootstrap method (bootstrap = \"AWB\"). Can used set parameter directly rather via default link block length. union Logical indicator whether use bootstrap union tests (TRUE) (FALSE), see Smeekes Taylor (2012). Default TRUE. union_quantile quantile bootstrap distribution used scaling individual statistics union. Ideally equal desired significance level test. Default 0.05. parameter overwritten significance level provided argument level. deterministics String indicating deterministic specification. relevant union = FALSE. Options \"none\": deterministics; \"intercept\": intercept ; \"trend\": intercept trend. union = FALSE, default adding intercept (warning given). detrend String indicating type detrending performed. relevant union = FALSE. Options : \"OLS\" \"QD\" (typically also called GLS, see Elliott, Rothenberg Stock, 1996). default \"OLS\". min_lag Minimum lag length augmented Dickey-Fuller regression. Default 0. max_lag Maximum lag length augmented Dickey-Fuller regression. Default uses sample size-based rule \\(12(T/100)^{1/4}\\). criterion String information criterion used select lag length augmented Dickey-Fuller regression. Options : \"AIC\", \"BIC\", \"MAIC\", \"MBIC\". Default \"MAIC\" (Ng Perron, 2001). criterion_scale Logical indicator whether use rescaled information criteria Cavaliere et al. (2015) (TRUE) (FALSE). Default TRUE. show_progress Logical indicator whether bootstrap progress update printed console. Default FALSE. do_parallel Logical indicator whether bootstrap loop executed parallel. Default TRUE. cores number cores used parallel loops. Default use one.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/boot_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Panel Unit Root Test — boot_panel","text":"object class \"bootUR\", \"htest\" following components: method name hypothesis test method; data.name name variable method performed; null.value value (gamma) parameter lagged dependent variable ADF regression null hypothesis. null, series unit root. Testing null unit root boils testing significance gamma parameter; alternative character string specifying direction alternative hypothesis relative null value. alternative postulates series stationary; estimate union test, estimated value (gamma) parameter lagged dependent variable ADF regression defined, hence NA given; statistic value test statistic unit root test; p.value p-value unit root test; details list containing detailed outcomes performed tests, selected lags, individual estimates p-values. specifications specifications used test.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/boot_panel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Panel Unit Root Test — boot_panel","text":"See boot_ur details bootstrap algorithm lag selection.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/boot_panel.html","id":"errors-and-warnings","dir":"Reference","previous_headings":"","what":"Errors and warnings","title":"Panel Unit Root Test — boot_panel","text":"Error: Resampling-based bootstraps MBB SB handle missing values. time series data different starting end points (thus series contain NA values beginning /end sample, resampling-based moving block bootstrap (MBB) sieve bootstrap (SB) used, create holes (internal missings) bootstrap samples. Switch another bootstrap method truncate sample eliminate NA values. Warning: SB SWB bootstrap recommended boot_ur; see help details. Although sieve bootstrap methods \"SB\" \"SWB\" can used, Smeekes Urbain (2014b) show suited capture general forms dependence across units, using joint multiple testing valid. warning thereofre serves recommend user consider different bootstrap method. Warning: Deterministic specification argument deterministics ignored, union test applied. union test calculates union four combinations deterministic components (intercept intercept trend) detrending methods (OLS QD). Setting deterministic components manually therefore effect. Warning: Detrending method argument detrend ignored, union test applied. union test calculates union four combinations deterministic components (intercept intercept trend) detrending methods (OLS QD). Setting detrending methods manually therefore effect.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/boot_panel.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Panel Unit Root Test — boot_panel","text":"Smeekes, S. Wilms, . (2023). bootUR: R Package Bootstrap Unit Root Tests. Journal Statistical Software, 106(12), 1-39. Chang, Y. Park, J. (2003). sieve bootstrap test unit root. Journal Time Series Analysis, 24(4), 379-400. Cavaliere, G. Taylor, .M.R (2009). Heteroskedastic time series unit root. Econometric Theory, 25, 1228–1276. Cavaliere, G., Phillips, P.C.B., Smeekes, S., Taylor, .M.R. (2015). Lag length selection unit root tests presence nonstationary volatility. Econometric Reviews, 34(4), 512-536. Elliott, G., Rothenberg, T.J., Stock, J.H. (1996). Efficient tests autoregressive unit root. Econometrica, 64(4), 813-836. Friedrich, M., Smeekes, S. Urbain, J.-P. (2020). Autoregressive wild bootstrap inference nonparametric trends. Journal Econometrics, 214(1), 81-109. Ng, S. Perron, P. (2001). Lag Length Selection Construction Unit Root Tests Good Size Power. Econometrica, 69(6), 1519-1554, Palm, F.C., Smeekes, S. Urbain, J.-P. (2008). Bootstrap unit root tests: Comparison extensions. Journal Time Series Analysis, 29(1), 371-401. Palm, F. C., Smeekes, S., Urbain, J.-.P. (2011). Cross-sectional dependence robust block bootstrap panel unit root tests. Journal Econometrics, 163(1), 85-104. Paparoditis, E. Politis, D.N. (2003). Residual-based block bootstrap unit root testing. Econometrica, 71(3), 813-855. Perron, P. Qu, Z. (2008). simple modification improve finite sample properties Ng Perron's unit root tests. Economic Letters, 94(1), 12-19. Rho, Y. Shao, X. (2019). Bootstrap-assisted unit root testing piecewise locally stationary errors. Econometric Theory, 35(1), 142-166. Shao, X. (2010). dependent wild bootstrap. Journal American Statistical Association, 105(489), 218-235. Shao, X. (2011). bootstrap-assisted spectral test white noise unknown dependence. Journal Econometrics, 162, 213-224. Smeekes, S. (2013). Detrending bootstrap unit root tests. Econometric Reviews, 32(8), 869-891. Smeekes, S. Taylor, .M.R. (2012). Bootstrap union tests unit roots presence nonstationary volatility. Econometric Theory, 28(2), 422-456. Smeekes, S. Urbain, J.-P. (2014a). multivariate invariance principle modified wild bootstrap methods application unit root testing. GSBE Research Memorandum . RM/14/008, Maastricht University Smeekes, S. Urbain, J.-P. (2014b). applicability sieve bootstrap time series panels. Oxford Bulletin Economics Statistics, 76(1), 139-151.","code":""},{"path":[]},{"path":"https://smeekes.github.io/bootUR/reference/boot_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Panel Unit Root Test — boot_panel","text":"","code":"# boot_panel on GDP_BE and GDP_DE two_series_boot_panel <- boot_panel(MacroTS[, 1:2], bootstrap = \"AWB\", B = 199,                                     do_parallel = FALSE, show_progress = FALSE) print(two_series_boot_panel) #>  #> \tPanel AWB bootstrap group-mean union test #>  #> data: MacroTS[, 1:2] #> null hypothesis: All series have a unit root #> alternative hypothesis: Some series are stationary #>  #>                estimate largest root statistic p-value #> MacroTS[, 1:2]                    NA    -1.048  0.0603 #>"},{"path":"https://smeekes.github.io/bootUR/reference/boot_sqt.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap Sequential Quantile Test — boot_sqt","title":"Bootstrap Sequential Quantile Test — boot_sqt","text":"Performs Bootstrap Sequential Quantile Test (BSQT) proposed Smeekes (2015).","code":""},{"path":"https://smeekes.github.io/bootUR/reference/boot_sqt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap Sequential Quantile Test — boot_sqt","text":"","code":"boot_sqt(data, data_name = NULL, steps = 0:NCOL(data), bootstrap = \"AWB\",   B = 1999, block_length = NULL, ar_AWB = NULL, SQT_level = 0.05,   union = TRUE, deterministics = NULL, detrend = NULL, min_lag = 0,   max_lag = NULL, criterion = \"MAIC\", criterion_scale = TRUE,   show_progress = TRUE, do_parallel = TRUE, cores = NULL)"},{"path":"https://smeekes.github.io/bootUR/reference/boot_sqt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap Sequential Quantile Test — boot_sqt","text":"data \\(T\\)-dimensional vector (\\(T\\) x \\(N\\))-matrix \\(N\\) time series \\(T\\) observations tested unit roots. Data may also time series format (e.g. ts, zoo xts), data frame, long column represents single time series. data_name Optional name data, used output. default uses name 'data' argument. steps Numeric vector quantiles units tested. Default test unit sequentially. bootstrap String bootstrap method used. Options \"MBB\" Moving block bootstrap (Paparoditis Politis, 2003; Palm, Smeekes Urbain, 2011); \"BWB\" Block wild bootstrap (Shao, 2011; Smeekes Urbain, 2014a); \"DWB\" Dependent wild bootstrap (Shao, 2010; Smeekes Urbain, 2014a; Rho Shao, 2019); \"AWB\" Autoregressive wild bootstrap (Smeekes Urbain, 2014a; Friedrich, Smeekes Urbain, 2020), default; \"SB\" Sieve bootstrap (Chang Park, 2003; Palm, Smeekes Urbain, 2008; Smeekes, 2013); \"SWB\" Sieve wild bootstrap (Cavaliere Taylor, 2009; Smeekes Taylor, 2012). B Number bootstrap replications. Default 1999. block_length Desired 'block length' bootstrap. MBB, BWB DWB bootstrap, genuine block length. AWB bootstrap, block length transformed autoregressive parameter via formula \\(0.01^(1/block_length)\\) Smeekes Urbain (2014a); can overwritten setting ar_AWB directly. Default sets block length function time series length T, via rule \\(block_length = 1.75 T^(1/3)\\) Palm, Smeekes Urbain (2011). ar_AWB Autoregressive parameter used AWB bootstrap method (bootstrap = \"AWB\"). Can used set parameter directly rather via default link block length. SQT_level Desired significance level sequential tests performed. Default 0.05. union Logical indicator whether use bootstrap union tests (TRUE) (FALSE), see Smeekes Taylor (2012). Default TRUE. deterministics String indicating deterministic specification. relevant union = FALSE. Options \"none\": deterministics; \"intercept\": intercept ; \"trend\": intercept trend. union = FALSE, default adding intercept (warning given). detrend String indicating type detrending performed. relevant union = FALSE. Options : \"OLS\" \"QD\" (typically also called GLS, see Elliott, Rothenberg Stock, 1996). default \"OLS\". min_lag Minimum lag length augmented Dickey-Fuller regression. Default 0. max_lag Maximum lag length augmented Dickey-Fuller regression. Default uses sample size-based rule \\(12(T/100)^{1/4}\\). criterion String information criterion used select lag length augmented Dickey-Fuller regression. Options : \"AIC\", \"BIC\", \"MAIC\", \"MBIC\". Default \"MAIC\" (Ng Perron, 2001). criterion_scale Logical indicator whether use rescaled information criteria Cavaliere et al. (2015) (TRUE) (FALSE). Default TRUE. show_progress Logical indicator whether bootstrap progress update printed console. Default FALSE. do_parallel Logical indicator whether bootstrap loop executed parallel. Default TRUE. cores number cores used parallel loops. Default use one.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/boot_sqt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrap Sequential Quantile Test — boot_sqt","text":"object class \"bootUR\", \"mult_htest\" following components: method name hypothesis test method; data.name name data method performed; null.value value (gamma) parameter lagged dependent variable ADF regression null hypothesis. null, series unit root. Testing null unit root boils testing significance gamma parameter; alternative character string specifying direction alternative hypothesis relative null value. alternative postulates series stationary; estimate estimated values (gamma) parameter lagged dependent variable ADF regressions. Note union test (union = TRUE), estimate defined, hence NA returned; statistic value test statistic unit root tests; p.value vector NA values, p-values per inidividual series available.p-value test sequence can found details; rejections vector logical indicators time series whether null hypothesis unit root rejected (TRUE) (FALSE); details list containing detailed outcomes performed tests, selected lags, individual estimates p-values. addtion, slot FDR contains matrix step stationary units null alternative hypothesis, test statistic p-value; series.names names series tests performed ; specifications specifications used tests.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/boot_sqt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bootstrap Sequential Quantile Test — boot_sqt","text":"parameter steps can either set increasing sequence integers smaller equal number series N, fractions total number series (quantiles). N time series, setting steps = 0:N means unit tested sequentially. case method equivalent StepM method Romano Wolf (2005), therefore controls familywise error rate. split series K equally sized groups, use steps = 0:K / K. convention accordance notation Smeekes (2015), first entry vector equal zero, second entry indicates end first group, . initial 0 final value (1 N) omitted, automatically added function. See boot_ur details bootstrap algorithm lag selection.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/boot_sqt.html","id":"errors-and-warnings","dir":"Reference","previous_headings":"","what":"Errors and warnings","title":"Bootstrap Sequential Quantile Test — boot_sqt","text":"Error: Resampling-based bootstraps MBB SB handle missing values. time series data different starting end points (thus series contain NA values beginning /end sample, resampling-based moving block bootstrap (MBB) sieve bootstrap (SB) used, create holes (internal missings) bootstrap samples. Switch another bootstrap method truncate sample eliminate NA values. Error: Invalid input values steps: must quantiles positive integers. Construction steps satisfy criteria listed 'Details'. Warning: SB SWB bootstrap recommended boot_ur; see help details. Although sieve bootstrap methods \"SB\" \"SWB\" can used, Smeekes Urbain (2014b) show suited capture general forms dependence across units, using joint multiple testing valid. warning thereofre serves recommend user consider different bootstrap method. Warning: Deterministic specification argument deterministics ignored, union test applied. union test calculates union four combinations deterministic components (intercept intercept trend) detrending methods (OLS QD). Setting deterministic components manually therefore effect. Warning: Detrending method argument detrend ignored, union test applied. union test calculates union four combinations deterministic components (intercept intercept trend) detrending methods (OLS QD). Setting detrending methods manually therefore effect.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/boot_sqt.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bootstrap Sequential Quantile Test — boot_sqt","text":"Smeekes, S. Wilms, . (2023). bootUR: R Package Bootstrap Unit Root Tests. Journal Statistical Software, 106(12), 1-39. Chang, Y. Park, J. (2003). sieve bootstrap test unit root. Journal Time Series Analysis, 24(4), 379-400. Cavaliere, G. Taylor, .M.R (2009). Heteroskedastic time series unit root. Econometric Theory, 25, 1228–1276. Cavaliere, G., Phillips, P.C.B., Smeekes, S., Taylor, .M.R. (2015). Lag length selection unit root tests presence nonstationary volatility. Econometric Reviews, 34(4), 512-536. Elliott, G., Rothenberg, T.J., Stock, J.H. (1996). Efficient tests autoregressive unit root. Econometrica, 64(4), 813-836. Friedrich, M., Smeekes, S. Urbain, J.-P. (2020). Autoregressive wild bootstrap inference nonparametric trends. Journal Econometrics, 214(1), 81-109. Ng, S. Perron, P. (2001). Lag Length Selection Construction Unit Root Tests Good Size Power. Econometrica, 69(6), 1519-1554, Palm, F.C., Smeekes, S. Urbain, J.-P. (2008). Bootstrap unit root tests: Comparison extensions. Journal Time Series Analysis, 29(1), 371-401. Palm, F. C., Smeekes, S., Urbain, J.-.P. (2011). Cross-sectional dependence robust block bootstrap panel unit root tests. Journal Econometrics, 163(1), 85-104. Paparoditis, E. Politis, D.N. (2003). Residual-based block bootstrap unit root testing. Econometrica, 71(3), 813-855. Perron, P. Qu, Z. (2008). simple modification improve finite sample properties Ng Perron's unit root tests. Economic Letters, 94(1), 12-19. Rho, Y. Shao, X. (2019). Bootstrap-assisted unit root testing piecewise locally stationary errors. Econometric Theory, 35(1), 142-166. Romano, J. P. Wolf, M. (2005). Stepwise multiple testing formalized data snooping. Econometrica, 73(4), 1237-1282. #' @references Shao, X. (2010). dependent wild bootstrap. Journal American Statistical Association, 105(489), 218-235. Shao, X. (2011). bootstrap-assisted spectral test white noise unknown dependence. Journal Econometrics, 162, 213-224. Smeekes, S. (2013). Detrending bootstrap unit root tests. Econometric Reviews, 32(8), 869-891. Smeekes, S. (2015). Bootstrap sequential tests determine order integration individual units time series panel. Journal Time Series Analysis, 36(3), 398-415. Smeekes, S. Taylor, .M.R. (2012). Bootstrap union tests unit roots presence nonstationary volatility. Econometric Theory, 28(2), 422-456. Smeekes, S. Urbain, J.-P. (2014a). multivariate invariance principle modified wild bootstrap methods application unit root testing. GSBE Research Memorandum . RM/14/008, Maastricht University Smeekes, S. Urbain, J.-P. (2014b). applicability sieve bootstrap time series panels. Oxford Bulletin Economics Statistics, 76(1), 139-151.","code":""},{"path":[]},{"path":"https://smeekes.github.io/bootUR/reference/boot_sqt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrap Sequential Quantile Test — boot_sqt","text":"","code":"# boot_sqt on GDP_BE and GDP_DE two_series_boot_sqt <- boot_sqt(MacroTS[, 1:2], bootstrap = \"AWB\", B = 199,                                 do_parallel = FALSE, show_progress = FALSE) print(two_series_boot_sqt) #>  #> \tAWB bootstrap sequential quantile union test #>  #> data: MacroTS[, 1:2] #> null hypothesis: Series has a unit root #> alternative hypothesis: Series is stationary #>  #> Sequence of tests:  #>        H0: # I(0) H1: # I(0)  tstat p-value #> Step 1          0          1 -1.053  0.1407 #>"},{"path":"https://smeekes.github.io/bootUR/reference/boot_union.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap Union Test for Unit Roots — boot_union","title":"Bootstrap Union Test for Unit Roots — boot_union","text":"Performs bootstrap unit root test based union rejections 4 tests different number deterministic components different type detrending (Harvey, Leybourne Taylor, 2012; Smeekes Taylor, 2012).","code":""},{"path":"https://smeekes.github.io/bootUR/reference/boot_union.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap Union Test for Unit Roots — boot_union","text":"","code":"boot_union(data, data_name = NULL, bootstrap = \"AWB\", B = 1999,   block_length = NULL, ar_AWB = NULL, min_lag = 0, max_lag = NULL,   criterion = \"MAIC\", criterion_scale = TRUE, union_quantile = 0.05,   show_progress = TRUE, do_parallel = TRUE, cores = NULL)"},{"path":"https://smeekes.github.io/bootUR/reference/boot_union.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap Union Test for Unit Roots — boot_union","text":"data \\(T\\)-dimensional vector tested unit roots. Data may also time series format (e.g. ts, zoo xts), data frame. data_name Optional name data, used output. default uses name 'data' argument. bootstrap String bootstrap method used. Options \"MBB\" Moving blocks bootstrap (Paparoditis Politis, 2003); \"BWB\" Block wild bootstrap (Shao, 2011); \"DWB\" Dependent wild bootstrap (Shao, 2010; Rho Shao, 2019); \"AWB\" Autoregressive wild bootstrap (Smeekes Urbain, 2014a; Friedrich, Smeekes Urbain, 2020), default; \"SB\" Sieve bootstrap (Palm, Smeekes Urbain, 2008); \"SWB\" Sieve wild bootstrap (Cavaliere Taylor, 2009; Smeekes Taylor, 2012). B Number bootstrap replications. Default 1999. block_length Desired 'block length' bootstrap. MBB, BWB DWB bootstrap, genuine block length. AWB bootstrap, block length transformed autoregressive parameter via formula \\(0.01^(1/block_length)\\) Smeekes Urbain (2014a); can overwritten setting ar_AWB directly. Default sets block length function time series length T, via rule \\(block_length = 1.75 T^(1/3)\\) Palm, Smeekes Urbain (2011). ar_AWB Autoregressive parameter used AWB bootstrap method (bootstrap = \"AWB\"). Can used set parameter directly rather via default link block length. min_lag Minimum lag length augmented Dickey-Fuller regression. Default 0. max_lag Maximum lag length augmented Dickey-Fuller regression. Default uses sample size-based rule \\(12(T/100)^{1/4}\\). criterion String information criterion used select lag length augmented Dickey-Fuller regression. Options : \"AIC\", \"BIC\", \"MAIC\", \"MBIC\". Default \"MAIC\" (Ng Perron, 2001). criterion_scale Logical indicator whether use rescaled information criteria Cavaliere et al. (2015) (TRUE) (FALSE). Default TRUE. union_quantile quantile bootstrap distribution used scaling individual statistics union. Ideally equal desired significance level test. Default 0.05. parameter overwritten significance level provided argument level. show_progress Logical indicator whether bootstrap progress update printed console. Default FALSE. do_parallel Logical indicator whether bootstrap loop executed parallel. Default TRUE. cores number cores used parallel loops. Default use one.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/boot_union.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrap Union Test for Unit Roots — boot_union","text":"object class \"bootUR\", \"htest\" following components: method name hypothesis test method; data.name name variable method performed; null.value value (gamma) parameter lagged dependent variable ADF regression null hypothesis. null, series unit root. Testing null unit root boils testing significance gamma parameter; alternative character string specifying direction alternative hypothesis relative null value. alternative postulates series stationary; estimate union test, estimated value (gamma) parameter lagged dependent variable ADF regression defined, hence NA given; statistic value test statistic unit root test; p.value p-value unit root test; details list containing detailed outcomes performed tests, selected lags, individual estimates p-values. specifications specifications used test.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/boot_union.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bootstrap Union Test for Unit Roots — boot_union","text":"union taken combination tests intercept intercept plus trend, coupled OLS detrending QD detrending, Harvey, Leybourne Taylor (2012) Smeekes Taylor (2012). bootstrap algorithm always based residual bootstrap (alternative) obtain residuals rather difference-based bootstrap (null), see e.g. Palm, Smeekes Urbain (2008). Lag length selection done automatically ADF regressions specified information criterion. one modified criteria Ng Perron (2001) used, correction Perron Qu (2008) applied. overwrite data-driven lag length selection pre-specified lag length, simply set minimum `min_lag` maximum lag length `max_lag` selection algorithm equal desired lag length.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/boot_union.html","id":"errors-and-warnings","dir":"Reference","previous_headings":"","what":"Errors and warnings","title":"Bootstrap Union Test for Unit Roots — boot_union","text":"Error: Multiple time series allowed. Switch multivariate method boot_ur, change argument data univariate time series. function simple wrapper around boot_ur facilitate use single time series. support multiple time series, boot_ur specifically suited .","code":""},{"path":"https://smeekes.github.io/bootUR/reference/boot_union.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bootstrap Union Test for Unit Roots — boot_union","text":"Smeekes, S. Wilms, . (2023). bootUR: R Package Bootstrap Unit Root Tests. Journal Statistical Software, 106(12), 1-39. Chang, Y. Park, J. (2003). sieve bootstrap test unit root. Journal Time Series Analysis, 24(4), 379-400. Cavaliere, G. Taylor, .M.R (2009). Heteroskedastic time series unit root. Econometric Theory, 25, 1228–1276. Cavaliere, G., Phillips, P.C.B., Smeekes, S., Taylor, .M.R. (2015). Lag length selection unit root tests presence nonstationary volatility. Econometric Reviews, 34(4), 512-536. Friedrich, M., Smeekes, S. Urbain, J.-P. (2020). Autoregressive wild bootstrap inference nonparametric trends. Journal Econometrics, 214(1), 81-109. Harvey, D.., Leybourne, S.J., Taylor, .M.R. (2012). Testing unit roots presence uncertainty trend initial condition. Journal Econometrics, 169(2), 188-195. Ng, S. Perron, P. (2001). Lag Length Selection Construction Unit Root Tests Good Size Power. Econometrica, 69(6), 1519-1554, Palm, F.C., Smeekes, S. Urbain, J.-P. (2008). Bootstrap unit root tests: Comparison extensions. Journal Time Series Analysis, 29(1), 371-401. Paparoditis, E. Politis, D.N. (2003). Residual-based block bootstrap unit root testing. Econometrica, 71(3), 813-855. Perron, P. Qu, Z. (2008). simple modification improve finite sample properties Ng Perron's unit root tests. Economic Letters, 94(1), 12-19. Rho, Y. Shao, X. (2019). Bootstrap-assisted unit root testing piecewise locally stationary errors. Econometric Theory, 35(1), 142-166. Shao, X. (2010). dependent wild bootstrap. Journal American Statistical Association, 105(489), 218-235. Shao, X. (2011). bootstrap-assisted spectral test white noise unknown dependence. Journal Econometrics, 162, 213-224. Smeekes, S. (2013). Detrending bootstrap unit root tests. Econometric Reviews, 32(8), 869-891. Smeekes, S. Taylor, .M.R. (2012). Bootstrap union tests unit roots presence nonstationary volatility. Econometric Theory, 28(2), 422-456. Smeekes, S. Urbain, J.-P. (2014a). multivariate invariance principle modified wild bootstrap methods application unit root testing. GSBE Research Memorandum . RM/14/008, Maastricht University","code":""},{"path":[]},{"path":"https://smeekes.github.io/bootUR/reference/boot_union.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrap Union Test for Unit Roots — boot_union","text":"","code":"# boot_union on GDP_BE GDP_BE_df <- boot_union(MacroTS[, 1], B = 199, do_parallel = FALSE, show_progress = FALSE) print(GDP_BE_df) #>  #> \tAWB bootstrap union test on a single time series #>  #> data: MacroTS[, 1] #> null hypothesis: Series has a unit root #> alternative hypothesis: Series is stationary #>  #>              estimate largest root statistic p-value #> MacroTS[, 1]                    NA    -1.007  0.1206 #>"},{"path":"https://smeekes.github.io/bootUR/reference/boot_ur.html","id":null,"dir":"Reference","previous_headings":"","what":"Individual Unit Root Tests without multiple testing control — boot_ur","title":"Individual Unit Root Tests without multiple testing control — boot_ur","text":"function performs bootstrap unit root tests time series individually.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/boot_ur.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Individual Unit Root Tests without multiple testing control — boot_ur","text":"","code":"boot_ur(data, data_name = NULL, bootstrap = \"AWB\", B = 1999,   block_length = NULL, ar_AWB = NULL, level = NULL, union = TRUE,   union_quantile = 0.05, deterministics = NULL, detrend = NULL,   min_lag = 0, max_lag = NULL, criterion = \"MAIC\",   criterion_scale = TRUE, show_progress = TRUE, do_parallel = TRUE,   cores = NULL)"},{"path":"https://smeekes.github.io/bootUR/reference/boot_ur.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Individual Unit Root Tests without multiple testing control — boot_ur","text":"data \\(T\\)-dimensional vector (\\(T\\) x \\(N\\))-matrix \\(N\\) time series \\(T\\) observations tested unit roots. Data may also time series format (e.g. ts, zoo xts), data frame, long column represents single time series. data_name Optional name data, used output. default uses name 'data' argument. bootstrap String bootstrap method used. Options \"MBB\" Moving block bootstrap (Paparoditis Politis, 2003; Palm, Smeekes Urbain, 2011); \"BWB\" Block wild bootstrap (Shao, 2011; Smeekes Urbain, 2014a); \"DWB\" Dependent wild bootstrap (Shao, 2010; Smeekes Urbain, 2014a; Rho Shao, 2019); \"AWB\" Autoregressive wild bootstrap (Smeekes Urbain, 2014a; Friedrich, Smeekes Urbain, 2020), default; \"SB\" Sieve bootstrap (Chang Park, 2003; Palm, Smeekes Urbain, 2008; Smeekes, 2013); \"SWB\" Sieve wild bootstrap (Cavaliere Taylor, 2009; Smeekes Taylor, 2012). B Number bootstrap replications. Default 1999. block_length Desired 'block length' bootstrap. MBB, BWB DWB bootstrap, genuine block length. AWB bootstrap, block length transformed autoregressive parameter via formula \\(0.01^(1/block_length)\\) Smeekes Urbain (2014a); can overwritten setting ar_AWB directly. Default sets block length function time series length T, via rule \\(block_length = 1.75 T^(1/3)\\) Palm, Smeekes Urbain (2011). ar_AWB Autoregressive parameter used AWB bootstrap method (bootstrap = \"AWB\"). Can used set parameter directly rather via default link block length. level desired significance level test (optional). used multivariate series able provide boolean vector rejections null hypothesis easy post-processing. Default NULL, case vector given. union Logical indicator whether use bootstrap union tests (TRUE) (FALSE), see Smeekes Taylor (2012). Default TRUE. union_quantile quantile bootstrap distribution used scaling individual statistics union. Ideally equal desired significance level test. Default 0.05. parameter overwritten significance level provided argument level. deterministics String indicating deterministic specification. relevant union = FALSE. Options \"none\": deterministics; \"intercept\": intercept ; \"trend\": intercept trend. union = FALSE, default adding intercept (warning given). detrend String indicating type detrending performed. relevant union = FALSE. Options : \"OLS\" \"QD\" (typically also called GLS, see Elliott, Rothenberg Stock, 1996). default \"OLS\". min_lag Minimum lag length augmented Dickey-Fuller regression. Default 0. max_lag Maximum lag length augmented Dickey-Fuller regression. Default uses sample size-based rule \\(12(T/100)^{1/4}\\). criterion String information criterion used select lag length augmented Dickey-Fuller regression. Options : \"AIC\", \"BIC\", \"MAIC\", \"MBIC\". Default \"MAIC\" (Ng Perron, 2001). criterion_scale Logical indicator whether use rescaled information criteria Cavaliere et al. (2015) (TRUE) (FALSE). Default TRUE. show_progress Logical indicator whether bootstrap progress update printed console. Default FALSE. do_parallel Logical indicator whether bootstrap loop executed parallel. Default TRUE. cores number cores used parallel loops. Default use one.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/boot_ur.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Individual Unit Root Tests without multiple testing control — boot_ur","text":"object class \"bootUR\", \"\\*\", \"\\*\" \"mult_htest\" multiple time series \"htest\" single time series, following components: method name hypothesis test method; data.name name data method performed; null.value value (gamma) parameter lagged dependent variable ADF regression null hypothesis. null, series unit root. Testing null unit root boils testing significance gamma parameter; alternative character string specifying direction alternative hypothesis relative null value. alternative postulates series stationary; estimate estimated value(s) (gamma) parameter lagged dependent variable ADF regressions. Note union test (union = TRUE), estimate defined, hence NA returned; statistic value(s) test statistic unit root test(s); p.value p-value(s) unit root test(s); rejections \"mult_htest\" . vector logical indicators time series whether null hypothesis unit root rejected (TRUE) (FALSE). supplied optional significance level given, otherwise NULL returned; details list containing detailed outcomes performed tests, selected lags, individual estimates p-values. series.names \"mult_htest\" . names series tests performed ; specifications specifications used test(s).","code":""},{"path":"https://smeekes.github.io/bootUR/reference/boot_ur.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Individual Unit Root Tests without multiple testing control — boot_ur","text":"options encompass many test proposed literature. detrend = \"OLS\" gives standard augmented Dickey-Fuller test, detrend = \"QD\" provides DF-GLS test Elliott, Rothenberg Stock (1996). bootstrap algorithm always based residual bootstrap (alternative) obtain residuals rather difference-based bootstrap (null), see e.g. Palm, Smeekes Urbain (2008). Lag length selection done automatically ADF regression specified information criterion. one modified criteria Ng Perron (2001) used, correction Perron Qu (2008) applied. short time series (fewer 50 time points) maximum lag length adjusted downward avoid potential multicollinearity issues bootstrap. overwrite data-driven lag length selection pre-specified lag length, simply set minimum `min_lag` maximum lag length `max_lag` selection algorithm equal desired lag length.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/boot_ur.html","id":"warnings","dir":"Reference","previous_headings":"","what":"Warnings","title":"Individual Unit Root Tests without multiple testing control — boot_ur","text":"function may give following warnings. Warning: Missing values cause resampling bootstrap executed time series individually. time series data different starting end points (thus series contain NA values beginning /end sample, resampling-based moving block bootstrap (MBB) sieve bootstrap (SB) used directly, create holes (internal missings) bootstrap samples. bootstrap methods therefore applied jointly usual, individually series. Warning: Deterministic specification argument deterministics ignored, union test applied. union test calculates union four combinations deterministic components (intercept intercept trend) detrending methods (OLS QD). Setting deterministic components manually therefore effect. Warning: Detrending method argument detrend ignored, union test applied. union test calculates union four combinations deterministic components (intercept intercept trend) detrending methods (OLS QD). Setting detrending methods manually therefore effect.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/boot_ur.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Individual Unit Root Tests without multiple testing control — boot_ur","text":"Smeekes, S. Wilms, . (2023). bootUR: R Package Bootstrap Unit Root Tests. Journal Statistical Software, 106(12), 1-39. Chang, Y. Park, J. (2003). sieve bootstrap test unit root. Journal Time Series Analysis, 24(4), 379-400. Cavaliere, G. Taylor, .M.R (2009). Heteroskedastic time series unit root. Econometric Theory, 25, 1228–1276. Cavaliere, G., Phillips, P.C.B., Smeekes, S., Taylor, .M.R. (2015). Lag length selection unit root tests presence nonstationary volatility. Econometric Reviews, 34(4), 512-536. Elliott, G., Rothenberg, T.J., Stock, J.H. (1996). Efficient tests autoregressive unit root. Econometrica, 64(4), 813-836. Friedrich, M., Smeekes, S. Urbain, J.-P. (2020). Autoregressive wild bootstrap inference nonparametric trends. Journal Econometrics, 214(1), 81-109. Ng, S. Perron, P. (2001). Lag Length Selection Construction Unit Root Tests Good Size Power. Econometrica, 69(6), 1519-1554, Palm, F.C., Smeekes, S. Urbain, J.-P. (2008). Bootstrap unit root tests: Comparison extensions. Journal Time Series Analysis, 29(1), 371-401. Palm, F. C., Smeekes, S., Urbain, J.-.P. (2011). Cross-sectional dependence robust block bootstrap panel unit root tests. Journal Econometrics, 163(1), 85-104. Paparoditis, E. Politis, D.N. (2003). Residual-based block bootstrap unit root testing. Econometrica, 71(3), 813-855. Perron, P. Qu, Z. (2008). simple modification improve finite sample properties Ng Perron's unit root tests. Economic Letters, 94(1), 12-19. Rho, Y. Shao, X. (2019). Bootstrap-assisted unit root testing piecewise locally stationary errors. Econometric Theory, 35(1), 142-166. Shao, X. (2010). dependent wild bootstrap. Journal American Statistical Association, 105(489), 218-235. Shao, X. (2011). bootstrap-assisted spectral test white noise unknown dependence. Journal Econometrics, 162, 213-224. Smeekes, S. (2013). Detrending bootstrap unit root tests. Econometric Reviews, 32(8), 869-891. Smeekes, S. Taylor, .M.R. (2012). Bootstrap union tests unit roots presence nonstationary volatility. Econometric Theory, 28(2), 422-456. Smeekes, S. Urbain, J.-P. (2014a). multivariate invariance principle modified wild bootstrap methods application unit root testing. GSBE Research Memorandum . RM/14/008, Maastricht University","code":""},{"path":"https://smeekes.github.io/bootUR/reference/boot_ur.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Individual Unit Root Tests without multiple testing control — boot_ur","text":"","code":"# boot_ur on GDP_BE and GDP_DE two_series_boot_ur <- boot_ur(MacroTS[, 1:2], bootstrap = \"MBB\", B = 199,                               do_parallel = FALSE, show_progress = FALSE) print(two_series_boot_ur) #>  #> \tMBB bootstrap union test on each individual series (no multiple testing #> \tcorrection) #>  #> data: MacroTS[, 1:2] #> null hypothesis: Series has a unit root #> alternative hypothesis: Series is stationary #>  #> Tests performed on each series:  #>        estimate largest root statistic p-value #> GDP_BE                    NA   -0.8123 0.34673 #> GDP_DE                    NA   -1.0958 0.08543 #>"},{"path":"https://smeekes.github.io/bootUR/reference/check_inputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Auxiliary Function (not accessible to users) to check if all arguments put in by the user are correct, and to perform some preliminary calculations. — check_inputs","title":"Auxiliary Function (not accessible to users) to check if all arguments put in by the user are correct, and to perform some preliminary calculations. — check_inputs","text":"Auxiliary Function (accessible users) check arguments put user correct, perform preliminary calculations.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/check_inputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Auxiliary Function (not accessible to users) to check if all arguments put in by the user are correct, and to perform some preliminary calculations. — check_inputs","text":"","code":"check_inputs(data, boot_sqt_test, boot_ur_test, level, bootstrap, B,   block_length, ar_AWB, union, min_lag, max_lag, criterion, deterministics,   detrend, steps, do_parallel, cores, data_name)"},{"path":"https://smeekes.github.io/bootUR/reference/check_inputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Auxiliary Function (not accessible to users) to check if all arguments put in by the user are correct, and to perform some preliminary calculations. — check_inputs","text":"data \\(T\\)-dimensional vector (\\(T\\) x \\(N\\))-matrix \\(N\\) time series \\(T\\) observations tested unit roots. Data may also time series format (e.g. ts, zoo xts), data frame, long column represents single time series. boot_sqt_test Logical indicator whether perform Bootstrap Quantile Test (TRUE) (FALSE). boot_ur_test Logical indicator whether perform individual ADF Tests (TRUE) (FALSE). level Desired significance level unit root test. bootstrap String bootstrap method used. Options \"MBB\" Moving blocks bootstrap; \"BWB\" Block wild bootstrap; \"DWB\" Dependent wild bootstrap; \"AWB\" Autoregressive wild bootstrap; \"SB\" Sieve bootstrap; \"SWB\" Sieve wild bootstrap. B Number bootstrap replications. Default 1999. block_length Desired 'block length' bootstrap. MBB, BWB DWB bootstrap, genuine block length. AWB bootstrap, block length transformed autoregressive parameter via formula \\(0.01^(1/block_length)\\); can overwritten setting ar_AWB directly. NULL, sets block length function time series length T, via rule \\(block_length = 1.75 T^(1/3)\\). ar_AWB Autoregressive parameter used AWB bootstrap method (bootstrap = \"AWB\"). Can used set parameter directly rather via default link block length. union Logical indicator whether use bootstrap union tests (TRUE) (FALSE). min_lag Minimum lag length augmented Dickey-Fuller regression. max_lag Maximum lag length augmented Dickey-Fuller regression. criterion String information criterion used select lag length augmented Dickey-Fuller regression. Options : \"AIC\", \"BIC\", \"MAIC\", \"MBIC. deterministics Numeric vector indicating deterministic specification. relevant union = FALSE. Options (combinations ): 0 - deterministics; 1 - intercept ; 2 - intercept trend. union = FALSE deterministics = NULL, intercept added. detrend String vector indicating type detrending performed. relevant union = FALSE. Options : \"OLS\" /\"QD\" (typically also called GLS). NULL, set \"OLS\". steps Numeric vector quantiles tested. Default test unit sequentially. do_parallel Logical indicator whether bootstrap loop executed parallel. Default TRUE. cores number cores used parallel loops. Default use one. data_name Optional name data, used output. default uses name 'data' argument.","code":""},{"path":[]},{"path":"https://smeekes.github.io/bootUR/reference/check_missing_insample_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Missing Values in Sample — check_missing_insample_values","title":"Check Missing Values in Sample — check_missing_insample_values","text":"Check Missing Values Sample","code":""},{"path":"https://smeekes.github.io/bootUR/reference/check_missing_insample_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Missing Values in Sample — check_missing_insample_values","text":"","code":"check_missing_insample_values(X)"},{"path":"https://smeekes.github.io/bootUR/reference/check_missing_insample_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Missing Values in Sample — check_missing_insample_values","text":"X (\\(T\\)x\\(N\\))-matrix \\(N\\) time series \\(T\\) observations. Data may also time series format (e.g. ts, zoo xts) data frame.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/check_missing_insample_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Missing Values in Sample — check_missing_insample_values","text":"\\(N\\)-dimensional vector, series whether missing values present (TRUE) (FALSE)","code":""},{"path":"https://smeekes.github.io/bootUR/reference/check_missing_insample_values.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Check Missing Values in Sample — check_missing_insample_values","text":"Smeekes, S. Wilms, . (2023). bootUR: R Package Bootstrap Unit Root Tests. Journal Statistical Software, 106(12), 1-39.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/diff_mult.html","id":null,"dir":"Reference","previous_headings":"","what":"Differences of Multiple Time Series — diff_mult","title":"Differences of Multiple Time Series — diff_mult","text":"Performs differencing multiple time series, possibly different orders time series.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/diff_mult.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differences of Multiple Time Series — diff_mult","text":"","code":"diff_mult(data, d, keep_NAs = TRUE)"},{"path":"https://smeekes.github.io/bootUR/reference/diff_mult.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differences of Multiple Time Series — diff_mult","text":"data (\\(T\\)x\\(N\\))-matrix \\(N\\) time series \\(T\\) observations. Data may also time series format (e.g. ts, zoo xts) data frame. d \\(N\\)-dimensional vector containing orders keep_NAs Logical indicator whether keep NA values resulting differencing beginning sample. Default TRUE. FALSE, entire row containing NA values removed.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/diff_mult.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differences of Multiple Time Series — diff_mult","text":"appropriately differenced data format original data.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/diff_mult.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Differences of Multiple Time Series — diff_mult","text":"Smeekes, S. Wilms, . (2023). bootUR: R Package Bootstrap Unit Root Tests. Journal Statistical Software, 106(12), 1-39.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/do_tests_and_bootstrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Auxiliary Function (not accessible to users) to create all bootstrap statistics used to perform the unit root tests. — do_tests_and_bootstrap","title":"Auxiliary Function (not accessible to users) to create all bootstrap statistics used to perform the unit root tests. — do_tests_and_bootstrap","text":"Auxiliary Function (accessible users) create bootstrap statistics used perform unit root tests.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/do_tests_and_bootstrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Auxiliary Function (not accessible to users) to create all bootstrap statistics used to perform the unit root tests. — do_tests_and_bootstrap","text":"","code":"do_tests_and_bootstrap(data, boot_sqt_test, boot_ur_test, level, bootstrap, B,   block_length, ar_AWB, union, min_lag, max_lag, criterion, deterministics,   detrend, criterion_scale, steps, h_rs, show_progress, do_parallel, cores,   data_name)"},{"path":"https://smeekes.github.io/bootUR/reference/do_tests_and_bootstrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Auxiliary Function (not accessible to users) to create all bootstrap statistics used to perform the unit root tests. — do_tests_and_bootstrap","text":"data \\(T\\)-dimensional vector (\\(T\\) x \\(N\\))-matrix \\(N\\) time series \\(T\\) observations tested unit roots. Data may also time series format (e.g. ts, zoo xts), data frame, long column represents single time series. boot_sqt_test Logical indicator whether perform Bootstrap Quantile Test (TRUE) (FALSE). boot_ur_test Logical indicator whether perform individual ADF Tests (TRUE) (FALSE). level Desired significance level unit root test. bootstrap String bootstrap method used. Options \"MBB\" Moving blocks bootstrap; \"BWB\" Block wild bootstrap; \"DWB\" Dependent wild bootstrap; \"AWB\" Autoregressive wild bootstrap; \"SB\" Sieve bootstrap; \"SWB\" Sieve wild bootstrap. B Number bootstrap replications. Default 1999. block_length Desired 'block length' bootstrap. MBB, BWB DWB bootstrap, genuine block length. AWB bootstrap, block length transformed autoregressive parameter via formula \\(0.01^(1/block_length)\\); can overwritten setting ar_AWB directly. NULL, sets block length function time series length T, via rule \\(block_length = 1.75 T^(1/3)\\). ar_AWB Autoregressive parameter used AWB bootstrap method (bootstrap = \"AWB\"). Can used set parameter directly rather via default link block length. union Logical indicator whether use bootstrap union tests (TRUE) (FALSE). min_lag Minimum lag length augmented Dickey-Fuller regression. max_lag Maximum lag length augmented Dickey-Fuller regression. criterion String information criterion used select lag length augmented Dickey-Fuller regression. Options : \"AIC\", \"BIC\", \"MAIC\", \"MBIC. deterministics Numeric vector indicating deterministic specification. relevant union = FALSE. Options (combinations ): 0 - deterministics; 1 - intercept ; 2 - intercept trend. union = FALSE deterministics = NULL, intercept added. detrend String vector indicating type detrending performed. relevant union = FALSE. Options : \"OLS\" /\"QD\" (typically also called GLS). NULL, set \"OLS\". criterion_scale Logical indicator whether use rescaled information criteria (TRUE) (FALSE). steps Numeric vector quantiles tested. Default test unit sequentially. h_rs Bandwidth used rescaled information criteria. show_progress Logical indicator whether bootstrap progress update printed console. Default FALSE. do_parallel Logical indicator whether bootstrap loop executed parallel. Default TRUE. cores number cores used parallel loops. Default use one. data_name Optional name data, used output. default uses name 'data' argument.","code":""},{"path":[]},{"path":"https://smeekes.github.io/bootUR/reference/find_nonmissing_subsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Non-Missing Subsamples — find_nonmissing_subsample","title":"Find Non-Missing Subsamples — find_nonmissing_subsample","text":"Find Non-Missing Subsamples","code":""},{"path":"https://smeekes.github.io/bootUR/reference/find_nonmissing_subsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Non-Missing Subsamples — find_nonmissing_subsample","text":"","code":"find_nonmissing_subsample(X)"},{"path":"https://smeekes.github.io/bootUR/reference/find_nonmissing_subsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Non-Missing Subsamples — find_nonmissing_subsample","text":"X (\\(T\\)x\\(N\\))-matrix \\(N\\) time series \\(T\\) observations. Data may also time series format (e.g. ts, zoo xts) data frame. Assumes prior check missing values -sample done.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/find_nonmissing_subsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Non-Missing Subsamples — find_nonmissing_subsample","text":"list following components range (2x\\(N\\))-dimensional matrix containing first last non-missing observation column X. all_equal Logical value indicating whether series non-missing indices.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/find_nonmissing_subsample.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Find Non-Missing Subsamples — find_nonmissing_subsample","text":"Smeekes, S. Wilms, . (2023). bootUR: R Package Bootstrap Unit Root Tests. Journal Statistical Software, 106(12), 1-39.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/order_integration.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine Order of Integration — order_integration","title":"Determine Order of Integration — order_integration","text":"Determines order integration time series dataset via sequence unit root tests, differences data accordingly eliminate stochastic trends.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/order_integration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine Order of Integration — order_integration","text":"","code":"order_integration(data, max_order = 2, method = \"boot_ur\", level = 0.05,   plot_orders = FALSE, data_name = NULL, ...)"},{"path":"https://smeekes.github.io/bootUR/reference/order_integration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine Order of Integration — order_integration","text":"data (\\(T\\)x\\(N\\))-matrix \\(N\\) time series \\(T\\) observations. Data may also time series format (e.g. ts, zoo xts) data frame. max_order maximum order integration time series. Default 2. method unit root tests used procedure. multiple time series options \"boot_ur\", \"boot_sqt\" \"boot_fdr\", \"boot_ur\" default. single time series options \"adf\", boot_adf\", \"boot_union\" \"boot_ur\", latter default. level Desired significance level unit root test. Default 0.05. plot_orders Logical indicator whether resulting orders integration plotted. Default FALSE. data_name Optional name data, used output. default uses name 'data' argument. ... Optional arguments passed chosen unit root test function.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/order_integration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine Order of Integration — order_integration","text":"object class \"bootUR\", \"order_integration\" following components order_int vector found orders integration time series. diff_data appropriately differenced data according order_int format original data.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/order_integration.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Determine Order of Integration — order_integration","text":"function follows approach laid Smeekes Wijler (2020), series differenced \\(d-1\\) times, \\(d\\) specified maximum order, differenced series tested unit roots. series unit root null rejected, classified \\((d)\\) removed consideration. remaining series integrated, tested unit roots , leading classification \\((d-1)\\) series null rejected. continued non-rejection observed time series, series integrated back original level. series null hypothesis rejected final stage classified \\((0)\\). Care must taken using boot_sqt argument steps given sequence integers. step series removed, one may end fewer series test indicated steps. integers larger number series automatically removed - along warning - test, recommend set steps form quantiles. Plotting orders integration requires ggplot2 package installed; plot skipped warning given . plots function plot_order_integration called. user may prefer set plot_orders = FALSE call function directly using returned value order_int order control plot settings save plot object.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/order_integration.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Determine Order of Integration — order_integration","text":"Smeekes, S. Wilms, . (2023). bootUR: R Package Bootstrap Unit Root Tests. Journal Statistical Software, 106(12), 1-39. Smeekes, S. Wijler, E. (2020). Unit roots cointegration. P. Fuleky (Ed.) Macroeconomic Forecasting Era Big Data, Chapter 17, pp. 541-584. Advanced Studies Theoretical Applied Econometrics, vol. 52. Springer.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/order_integration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine Order of Integration — order_integration","text":"","code":"# Use \"boot_ur\" to determine the order of GDP_BE and GDP_DE orders_tseries <- order_integration(MacroTS[, 1:2], method = \"boot_ur\", B = 199, do_parallel = FALSE, show_progress = FALSE)"},{"path":"https://smeekes.github.io/bootUR/reference/plot_missing_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Missing Values — plot_missing_values","title":"Plot Missing Values — plot_missing_values","text":"Plots missing values different types time series dataset.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/plot_missing_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Missing Values — plot_missing_values","text":"","code":"plot_missing_values(y, show_names = FALSE, show_legend = TRUE,   axis_text_size = NULL, legend_size = NULL, cols = NULL)"},{"path":"https://smeekes.github.io/bootUR/reference/plot_missing_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Missing Values — plot_missing_values","text":"y (\\(T\\)x\\(N\\))-matrix \\(N\\) time series \\(T\\) observations. Data may also time series format (e.g. ts, zoo xts) data frame. show_names Show time series' names plot (TRUE) (FALSE). Default TRUE. show_legend Logical indicator whether legend displayed. Default TRUE. axis_text_size Size text axis. Default takes ggplot2 defaults. legend_size Size text legend show_legend = TRUE. Default takes ggplot2 defaults. cols Vector colours displaying different types data. default overwritten, four colours must supplied.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/plot_missing_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Missing Values — plot_missing_values","text":"ggplot2 object containing missing values plot.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/plot_missing_values.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Missing Values — plot_missing_values","text":"function distinguish four types data: observed data (non-missing) three missing types. Type \"Balanced NA\" indicates entire rows missing (NA). cause unbalancedness missing rows can simply deleted.  Type \"Unbalanced NA\" missing values beginning end sample, cause unbalancedness. affect () bootstrap methods, see e.g.~boot_fdr. Type \"Internal NA\" missing values inside sample, need removed bootstrap unit root tests can used. function requires package ggplot2 installed. package found, plotting aborted.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/plot_missing_values.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot Missing Values — plot_missing_values","text":"Smeekes, S. Wilms, . (2023). bootUR: R Package Bootstrap Unit Root Tests. Journal Statistical Software, 106(12), 1-39.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/plot_order_integration.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Orders of Integration — plot_order_integration","title":"Plot Orders of Integration — plot_order_integration","text":"Plots vector orders integration time series.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/plot_order_integration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Orders of Integration — plot_order_integration","text":"","code":"plot_order_integration(orders, show_names = TRUE, show_legend = TRUE,   names_size = NULL, legend_size = NULL, cols = NULL)"},{"path":"https://smeekes.github.io/bootUR/reference/plot_order_integration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Orders of Integration — plot_order_integration","text":"orders \"bootUR\", \"order_integration\" object obtained function order_integration, vector found orders integration. show_names Show time series' names plot (TRUE) (FALSE). Default TRUE. show_legend Logical indicator whether legend displayed. Default TRUE. names_size Size time series' names show_names = TRUE. Default takes ggplot2 defaults. legend_size Size text legend show_legend = TRUE. Default takes ggplot2 defaults. cols Vector colours displaying orders integration. least many colours orders integration need supplied. Default supplies 4 colours displaying \\((3)\\) series.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/plot_order_integration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Orders of Integration — plot_order_integration","text":"ggplot2 object containing plot orders integration.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/plot_order_integration.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Orders of Integration — plot_order_integration","text":"function requires package ggplot2 installed. package found, plotting aborted.","code":""},{"path":"https://smeekes.github.io/bootUR/reference/plot_order_integration.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot Orders of Integration — plot_order_integration","text":"Smeekes, S. Wilms, . (2023). bootUR: R Package Bootstrap Unit Root Tests. Journal Statistical Software, 106(12), 1-39.","code":""},{"path":[]},{"path":"https://smeekes.github.io/bootUR/reference/print.bootUR.html","id":null,"dir":"Reference","previous_headings":"","what":"Printing Summary Output for Objects of class bootUR — print.bootUR","title":"Printing Summary Output for Objects of class bootUR — print.bootUR","text":"function prints summary output objects class bootUR (unit root testing)","code":""},{"path":"https://smeekes.github.io/bootUR/reference/print.bootUR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Printing Summary Output for Objects of class bootUR — print.bootUR","text":"","code":"# S3 method for class 'bootUR' print(x, digits = max(3, getOption(\"digits\") - 3), ...)"},{"path":"https://smeekes.github.io/bootUR/reference/print.mult_htest.html","id":null,"dir":"Reference","previous_headings":"","what":"Printing Summary Output for Objects of class mult_htest — print.mult_htest","title":"Printing Summary Output for Objects of class mult_htest — print.mult_htest","text":"function prints summary output objects class mult_htest (multiple hypothesis testing)","code":""},{"path":"https://smeekes.github.io/bootUR/reference/print.mult_htest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Printing Summary Output for Objects of class mult_htest — print.mult_htest","text":"","code":"# S3 method for class 'mult_htest' print(x, digits = max(3, getOption(\"digits\") - 3), ...)"},{"path":"https://smeekes.github.io/bootUR/news/index.html","id":"version-104","dir":"Changelog","previous_headings":"","what":"Version 1.0.4","title":"Version 1.0.4","text":"CRAN release: 2024-05-20","code":""},{"path":"https://smeekes.github.io/bootUR/news/index.html","id":"miscellaneous-1-0-4","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"Version 1.0.4","text":"Added RcppParallel cxxflags makevars, needed compatibility Windows ARM64 GitHub Actions added New package website","code":""},{"path":"https://smeekes.github.io/bootUR/news/index.html","id":"version-103","dir":"Changelog","previous_headings":"","what":"Version 1.0.3","title":"Version 1.0.3","text":"CRAN release: 2024-01-26","code":""},{"path":"https://smeekes.github.io/bootUR/news/index.html","id":"bug-fixes-1-0-3","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"Version 1.0.3","text":"Removed unused argument ‘h_rs’ documentation function chech_inputs() (CRAN note).","code":""},{"path":"https://smeekes.github.io/bootUR/news/index.html","id":"version-102","dir":"Changelog","previous_headings":"","what":"Version 1.0.2","title":"Version 1.0.2","text":"CRAN release: 2023-05-18","code":""},{"path":"https://smeekes.github.io/bootUR/news/index.html","id":"bug-fixes-1-0-2","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"Version 1.0.2","text":"Fixed CRAN check Additional Issues LTO warnings avoiding use arma::cube C++ code.","code":""},{"path":"https://smeekes.github.io/bootUR/news/index.html","id":"version-100","dir":"Changelog","previous_headings":"","what":"Version 1.0.0","title":"Version 1.0.0","text":"CRAN release: 2023-05-08","code":""},{"path":"https://smeekes.github.io/bootUR/news/index.html","id":"new-functionality-1-0-0","dir":"Changelog","previous_headings":"","what":"New Functionality","title":"Version 1.0.0","text":"Updated citation references incorporate Journal Statistical Software publication.","code":""},{"path":"https://smeekes.github.io/bootUR/news/index.html","id":"bug-fixes-1-0-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"Version 1.0.0","text":"Fixed error boot_panel() performing union.","code":""},{"path":"https://smeekes.github.io/bootUR/news/index.html","id":"version-050","dir":"Changelog","previous_headings":"","what":"Version 0.5.0","title":"Version 0.5.0","text":"CRAN release: 2022-07-11","code":""},{"path":"https://smeekes.github.io/bootUR/news/index.html","id":"new-functionality-0-5-0","dir":"Changelog","previous_headings":"","what":"New Functionality","title":"Version 0.5.0","text":"Output slots added store details tests individual test statistics selected lag lengths. Removed deprecated test names.","code":""},{"path":"https://smeekes.github.io/bootUR/news/index.html","id":"bug-fixes-0-5-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"Version 0.5.0","text":"Fixed error order_of_integration() boot_ur() test applied single time series.","code":""},{"path":"https://smeekes.github.io/bootUR/news/index.html","id":"version-042","dir":"Changelog","previous_headings":"","what":"Version 0.4.2","title":"Version 0.4.2","text":"CRAN release: 2021-11-25","code":""},{"path":"https://smeekes.github.io/bootUR/news/index.html","id":"new-functionality-0-4-2","dir":"Changelog","previous_headings":"","what":"New Functionality","title":"Version 0.4.2","text":"Output slot added stores te specifications tests.","code":""},{"path":"https://smeekes.github.io/bootUR/news/index.html","id":"bug-fixes-0-4-2","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"Version 0.4.2","text":"Visually differentiated test print output making name reflect important specifications. Forced normalisation signs eigenvectors calculated DWB ensure reproducability results across OSes.","code":""},{"path":"https://smeekes.github.io/bootUR/news/index.html","id":"version-041","dir":"Changelog","previous_headings":"","what":"Version 0.4.1","title":"Version 0.4.1","text":"CRAN release: 2021-11-06","code":""},{"path":"https://smeekes.github.io/bootUR/news/index.html","id":"new-functionality-0-4-1","dir":"Changelog","previous_headings":"","what":"New Functionality","title":"Version 0.4.1","text":"Parallel computing via RcppParallel package replaces OpenMP.","code":""},{"path":"https://smeekes.github.io/bootUR/news/index.html","id":"bug-fixes-0-4-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"Version 0.4.1","text":"Fixed order_integration() allow possible tests.","code":""},{"path":"https://smeekes.github.io/bootUR/news/index.html","id":"version-030","dir":"Changelog","previous_headings":"","what":"Version 0.3.0","title":"Version 0.3.0","text":"CRAN release: 2021-09-29","code":""},{"path":"https://smeekes.github.io/bootUR/news/index.html","id":"new-functionality-0-3-0","dir":"Changelog","previous_headings":"","what":"New Functionality","title":"Version 0.3.0","text":"Added new functions boot_adf(), boot_ur(), boot_frd(), boot_sqt() boot_panel() replace old functions boot_df(), iADFtest(), bFDRtest(), BQSTtest() paneltest(). old functions still available package deprecated functions. additional clarity, new arguments names used new functions. New adf() function added implements standard, non-bootstrap, augmented Dickey-Fuller (ADF) test","code":""},{"path":"https://smeekes.github.io/bootUR/news/index.html","id":"version-020","dir":"Changelog","previous_headings":"","what":"Version 0.2.0","title":"Version 0.2.0","text":"CRAN release: 2020-07-24","code":""},{"path":"https://smeekes.github.io/bootUR/news/index.html","id":"new-functionality-0-2-0","dir":"Changelog","previous_headings":"","what":"New Functionality","title":"Version 0.2.0","text":"Added parallel loops using OpenMP. Added functions order_integration() determine order integration time series dataset. addition mult_diff() added difference time series accordingly eliminate stochastic trends, plot_order_integration() added plot found orders integration. Added function plot_missing_values() give visual representation pattern missing values data.","code":""},{"path":"https://smeekes.github.io/bootUR/news/index.html","id":"bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"Version 0.2.0","text":"Fixed incorrect warning check_inputs() function given whenever NAs present S(W)B used, even dataset remained balanced. Fixed bug check_inputs() function also set bootstrap performed individually presence NAs even S(W)B used. Fixed bug/incorrect warning BSQTtest() incorrectly added another 0 argument q even one present already. Fixed possibility taking fine grid argument q BSQTtest() leading duplicates. Duplicates now removed warning given. Fixed bug SB last l observations excluded resampling. Fixed bug S(W)B short vector ADF residuals used (supplemented zeros) bootstrap.","code":""},{"path":"https://smeekes.github.io/bootUR/news/index.html","id":"version-010","dir":"Changelog","previous_headings":"","what":"Version 0.1.0","title":"Version 0.1.0","text":"CRAN release: 2020-06-25 First release; package available CRAN.","code":""}]
